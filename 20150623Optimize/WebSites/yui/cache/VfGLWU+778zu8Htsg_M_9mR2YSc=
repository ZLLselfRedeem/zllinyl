YUI.add("event-simulate",function(e,t){(function(){function v(t,n,a,f,l,c,h,p,d,v,m){t||e.error("simulateKeyEvent(): Invalid target.");if(i(n)){n=n.toLowerCase();switch(n){case"textevent":n="keypress";break;case"keyup":case"keydown":case"keypress":break;default:e.error("simulateKeyEvent(): Event type '"+n+"' not supported.")}}else e.error("simulateKeyEvent(): Event type must be a string.");s(a)||(a=!0),s(f)||(f=!0),o(l)||(l=e.config.win),s(c)||(c=!1),s(h)||(h=!1),s(p)||(p=!1),s(d)||(d=!1),u(v)||(v=0),u(m)||(m=0);var g=null;if(r(e.config.doc.createEvent)){try{g=e.config.doc.createEvent("KeyEvents"),g.initKeyEvent(n,a,f,l,c,h,p,d,v,m)}catch(y){try{g=e.config.doc.createEvent("Events")}catch(b){g=e.config.doc.createEvent("UIEvents")}finally{g.initEvent(n,a,f),g.view=l,g.altKey=h,g.ctrlKey=c,g.shiftKey=p,g.metaKey=d,g.keyCode=v,g.charCode=m}}t.dispatchEvent(g)}else o(e.config.doc.createEventObject)?(g=e.config.doc.createEventObject(),g.bubbles=a,g.cancelable=f,g.view=l,g.ctrlKey=c,g.altKey=h,g.shiftKey=p,g.metaKey=d,g.keyCode=m>0?m:v,t.fireEvent("on"+n,g)):e.error("simulateKeyEvent(): No event simulation framework present.")}function m(t,n,l,c,h,p,d,v,m,g,y,b,w,E,S,x){t||e.error("simulateMouseEvent(): Invalid target."),i(n)?!a[n.toLowerCase()]&&!f[n]&&e.error("simulateMouseEvent(): Event type '"+n+"' not supported."):e.error("simulateMouseEvent(): Event type must be a string."),s(l)||(l=!0),s(c)||(c=n!=="mousemove"),o(h)||(h=e.config.win),u(p)||(p=1),u(d)||(d=0),u(v)||(v=0),u(m)||(m=0),u(g)||(g=0),s(y)||(y=!1),s(b)||(b=!1),s(w)||(w=!1),s(E)||(E=!1),u(S)||(S=0),x=x||null;var T=null;if(r(e.config.doc.createEvent))T=e.config.doc.createEvent("MouseEvents"),T.initMouseEvent?T.initMouseEvent(n,l,c,h,p,d,v,m,g,y,b,w,E,S,x):(T=e.config.doc.createEvent("UIEvents"),T.initEvent(n,l,c),T.view=h,T.detail=p,T.screenX=d,T.screenY=v,T.clientX=m,T.clientY=g,T.ctrlKey=y,T.altKey=b,T.metaKey=E,T.shiftKey=w,T.button=S,T.relatedTarget=x),x&&!T.relatedTarget&&(n==="mouseout"?T.toElement=x:n==="mouseover"&&(T.fromElement=x)),t.dispatchEvent(T);else if(o(e.config.doc.createEventObject)){T=e.config.doc.createEventObject(),T.bubbles=l,T.cancelable=c,T.view=h,T.detail=p,T.screenX=d,T.screenY=v,T.clientX=m,T.clientY=g,T.ctrlKey=y,T.altKey=b,T.metaKey=E,T.shiftKey=w;switch(S){case 0:T.button=1;break;case 1:T.button=4;break;case 2:break;default:T.button=0}T.relatedTarget=x,t.fireEvent("on"+n,T)}else e.error("simulateMouseEvent(): No event simulation framework present.")}function g(t,n,a,f,l,p){t||e.error("simulateUIEvent(): Invalid target."),i(n)?(n=n.toLowerCase(),c[n]||e.error("simulateUIEvent(): Event type '"+n+"' not supported.")):e.error("simulateUIEvent(): Event type must be a string.");var d=null;s(a)||(a=n in h),s(f)||(f=n==="submit"),o(l)||(l=e.config.win),u(p)||(p=1),r(e.config.doc.createEvent)?(d=e.config.doc.createEvent("UIEvents"),d.initUIEvent(n,a,f,l,p),t.dispatchEvent(d)):o(e.config.doc.createEventObject)?(d=e.config.doc.createEventObject(),d.bubbles=a,d.cancelable=f,d.view=l,d.detail=p,t.fireEvent("on"+n,d)):e.error("simulateUIEvent(): No event simulation framework present.")}function y(t,n,r,i,s,o,u,a,f,l,c,h,p,v,m,g){var y;(!e.UA.ios||e.UA.ios<2)&&e.error("simulateGestureEvent(): Native gesture DOM eventframe is not available in this platform."),t||e.error("simulateGestureEvent(): Invalid target."),e.Lang.isString(n)?(n=n.toLowerCase(),d[n]||e.error("simulateTouchEvent(): Event type '"+n+"' not supported.")):e.error("simulateGestureEvent(): Event type must be a string."),e.Lang.isBoolean(r)||(r=!0),e.Lang.isBoolean(i)||(i=!0),e.Lang.isObject(s)||(s=e.config.win),e.Lang.isNumber(o)||(o=2),e.Lang.isNumber(u)||(u=0),e.Lang.isNumber(a)||(a=0),e.Lang.isNumber(f)||(f=0),e.Lang.isNumber(l)||(l=0),e.Lang.isBoolean(c)||(c=!1),e.Lang.isBoolean(h)||(h=!1),e.Lang.isBoolean(p)||(p=!1),e.Lang.isBoolean(v)||(v=!1),e.Lang.isNumber(m)||(m=1),e.Lang.isNumber(g)||(g=0),y=e.config.doc.createEvent("GestureEvent"),y.initGestureEvent(n,r,i,s,o,u,a,f,l,c,h,p,v,t,m,g),t.dispatchEvent(y)}function b(t,n,r,i,s,o,u,a,f,l,c,h,d,v,m,g,y,b,w){var E;t||e.error("simulateTouchEvent(): Invalid target."),e.Lang.isString(n)?(n=n.toLowerCase(),p[n]||e.error("simulateTouchEvent(): Event type '"+n+"' not supported.")):e.error("simulateTouchEvent(): Event type must be a string."),n==="touchstart"||n==="touchmove"?m.length===0&&e.error("simulateTouchEvent(): No touch object in touches"):n==="touchend"&&y.length===0&&e.error("simulateTouchEvent(): No touch object in changedTouches"),e.Lang.isBoolean(r)||(r=!0),e.Lang.isBoolean(i)||(i=n!=="touchcancel"),e.Lang.isObject(s)||(s=e.config.win),e.Lang.isNumber(o)||(o=1),e.Lang.isNumber(u)||(u=0),e.Lang.isNumber(a)||(a=0),e.Lang.isNumber(f)||(f=0),e.Lang.isNumber(l)||(l=0),e.Lang.isBoolean(c)||(c=!1),e.Lang.isBoolean(h)||(h=!1),e.Lang.isBoolean(d)||(d=!1),e.Lang.isBoolean(v)||(v=!1),e.Lang.isNumber(b)||(b=1),e.Lang.isNumber(w)||(w=0),e.Lang.isFunction(e.config.doc.createEvent)?(e.UA.android?e.UA.android<4?(E=e.config.doc.createEvent("MouseEvents"),E.initMouseEvent(n,r,i,s,o,u,a,f,l,c,h,d,v,0,t),E.touches=m,E.targetTouches=g,E.changedTouches=y):(E=e.config.doc.createEvent("TouchEvent"),E.initTouchEvent(m,g,y,n,s,u,a,f,l,c,h,d,v)):e.UA.ios?e.UA.ios>=2?(E=e.config.doc.createEvent("TouchEvent"),E.initTouchEvent(n,r,i,s,o,u,a,f,l,c,h,d,v,m,g,y,b,w)):e.error("simulateTouchEvent(): No touch event simulation framework present for iOS, "+e.UA.ios+"."):e.error("simulateTouchEvent(): Not supported agent yet, "+e.UA.userAgent),t.dispatchEvent(E)):e.error("simulateTouchEvent(): No event simulation framework present.")}var t=e.Lang,n=e.config.win,r=t.isFunction,i=t.isString,s=t.isBoolean,o=t.isObject,u=t.isNumber,a={click:1,dblclick:1,mouseover:1,mouseout:1,mousedown:1,mouseup:1,mousemove:1,contextmenu:1},f=n&&n.PointerEvent?{pointerover:1,pointerout:1,pointerdown:1,pointerup:1,pointermove:1}:{MSPointerOver:1,MSPointerOut:1,MSPointerDown:1,MSPointerUp:1,MSPointerMove:1},l={keydown:1,keyup:1,keypress:1},c={submit:1,blur
:1,change:1,focus:1,resize:1,scroll:1,select:1},h={scroll:1,resize:1,reset:1,submit:1,change:1,select:1,error:1,abort:1},p={touchstart:1,touchmove:1,touchend:1,touchcancel:1},d={gesturestart:1,gesturechange:1,gestureend:1};e.mix(h,a),e.mix(h,l),e.mix(h,p),e.Event.simulate=function(t,n,r){r=r||{},a[n]||f[n]?m(t,n,r.bubbles,r.cancelable,r.view,r.detail,r.screenX,r.screenY,r.clientX,r.clientY,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.button,r.relatedTarget):l[n]?v(t,n,r.bubbles,r.cancelable,r.view,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.keyCode,r.charCode):c[n]?g(t,n,r.bubbles,r.cancelable,r.view,r.detail):p[n]?e.config.win&&"ontouchstart"in e.config.win&&!e.UA.phantomjs&&!(e.UA.chrome&&e.UA.chrome<6)?b(t,n,r.bubbles,r.cancelable,r.view,r.detail,r.screenX,r.screenY,r.clientX,r.clientY,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.touches,r.targetTouches,r.changedTouches,r.scale,r.rotation):e.error("simulate(): Event '"+n+"' can't be simulated. Use gesture-simulate module instead."):e.UA.ios&&e.UA.ios>=2&&d[n]?y(t,n,r.bubbles,r.cancelable,r.view,r.detail,r.screenX,r.screenY,r.clientX,r.clientY,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.scale,r.rotation):e.error("simulate(): Event '"+n+"' can't be simulated.")}})()},"@VERSION@",{requires:["event-base"]});

YUI.add("async-queue",function(e,t){e.AsyncQueue=function(){this._init(),this.add.apply(this,arguments)};var n=e.AsyncQueue,r="execute",i="shift",s="promote",o="remove",u=e.Lang.isObject,a=e.Lang.isFunction;n.defaults=e.mix({autoContinue:!0,iterations:1,timeout:10,until:function(){return this.iterations|=0,this.iterations<=0}},e.config.queueDefaults||{}),e.extend(n,e.EventTarget,{_running:!1,_init:function(){e.EventTarget.call(this,{prefix:"queue",emitFacade:!0}),this._q=[],this.defaults={},this._initEvents()},_initEvents:function(){this.publish({execute:{defaultFn:this._defExecFn,emitFacade:!0},shift:{defaultFn:this._defShiftFn,emitFacade:!0},add:{defaultFn:this._defAddFn,emitFacade:!0},promote:{defaultFn:this._defPromoteFn,emitFacade:!0},remove:{defaultFn:this._defRemoveFn,emitFacade:!0}})},next:function(){var e;while(this._q.length){e=this._q[0]=this._prepare(this._q[0]);if(!e||!e.until())break;this.fire(i,{callback:e}),e=null}return e||null},_defShiftFn:function(e){this.indexOf(e.callback)===0&&this._q.shift()},_prepare:function(t){if(a(t)&&t._prepared)return t;var r=e.merge(n.defaults,{context:this,args:[],_prepared:!0},this.defaults,a(t)?{fn:t}:t),i=e.bind(function(){i._running||i.iterations--,a(i.fn)&&i.fn.apply(i.context||e,e.Array(i.args))},this);return e.mix(i,r)},run:function(){var e,t=!0;if(this._executing)return this._running=!0,this;for(e=this.next();e&&!this.isRunning();e=this.next()){t=e.timeout<0?this._execute(e):this._schedule(e);if(!t)break}return e||this.fire("complete"),this},_execute:function(e){this._running=e._running=!0,this._executing=e,e.iterations--,this.fire(r,{callback:e});var t=this._running&&e.autoContinue;return this._running=e._running=!1,this._executing=!1,t},_schedule:function(t){return this._running=e.later(t.timeout,this,function(){this._execute(t)&&this.run()}),!1},isRunning:function(){return!!this._running},_defExecFn:function(e){e.callback()},add:function(){return this.fire("add",{callbacks:e.Array(arguments,0,!0)}),this},_defAddFn:function(t){var n=this._q,r=[];e.Array.each(t.callbacks,function(e){u(e)&&(n.push(e),r.push(e))}),t.added=r},pause:function(){return this._running&&u(this._running)&&this._running.cancel(),this._running=!1,this},stop:function(){return this._q=[],this._running&&u(this._running)&&(this._running.cancel(),this._running=!1),this._executing||this.run(),this},indexOf:function(e){var t=0,n=this._q.length,r;for(;t<n;++t){r=this._q[t];if(r===e||r.id===e)return t}return-1},getCallback:function(e){var t=this.indexOf(e);return t>-1?this._q[t]:null},promote:function(e){var t={callback:e},n;return this.isRunning()?n=this.after(i,function(){this.fire(s,t),n.detach()},this):this.fire(s,t),this},_defPromoteFn:function(e){var t=this.indexOf(e.callback),n=t>-1?this._q.splice(t,1)[0]:null;e.promoted=n,n&&this._q.unshift(n)},remove:function(e){var t={callback:e},n;return this.isRunning()?n=this.after(i,function(){this.fire(o,t),n.detach()},this):this.fire(o,t),this},_defRemoveFn:function(e){var t=this.indexOf(e.callback);e.removed=t>-1?this._q.splice(t,1)[0]:null},size:function(){return this.isRunning()||this.next(),this._q.length}})},"@VERSION@",{requires:["event-custom"]});

YUI.add("gesture-simulate",function(e,t){function T(n){n||e.error(t+": invalid target node"),this.node=n,this.target=e.Node.getDOMNode(n);var r=this.node.getXY(),i=this._getDims();a=r[0]+i[0]/2,f=r[1]+i[1]/2}var t="gesture-simulate",n=e.config.win&&"ontouchstart"in e.config.win&&!e.UA.phantomjs&&!(e.UA.chrome&&e.UA.chrome<6),r={tap:1,doubletap:1,press:1,move:1,flick:1,pinch:1,rotate:1},i={touchstart:1,touchmove:1,touchend:1,touchcancel:1},s=e.config.doc,o,u=20,a,f,l={HOLD_TAP:10,DELAY_TAP:10,HOLD_PRESS:3e3,MIN_HOLD_PRESS:1e3,MAX_HOLD_PRESS:6e4,DISTANCE_MOVE:200,DURATION_MOVE:1e3,MAX_DURATION_MOVE:5e3,MIN_VELOCITY_FLICK:1.3,DISTANCE_FLICK:200,DURATION_FLICK:1e3,MAX_DURATION_FLICK:5e3,DURATION_PINCH:1e3},c="touchstart",h="touchmove",p="touchend",d="gesturestart",v="gesturechange",m="gestureend",g="mouseup",y="mousemove",b="mousedown",w="click",E="dblclick",S="x",x="y";T.prototype={_toRadian:function(e){return e*(Math.PI/180)},_getDims:function(){var e,t,n;return this.target.getBoundingClientRect?(e=this.target.getBoundingClientRect(),"height"in e?n=e.height:n=Math.abs(e.bottom-e.top),"width"in e?t=e.width:t=Math.abs(e.right-e.left)):(e=this.node.get("region"),t=e.width,n=e.height),[t,n]},_calculateDefaultPoint:function(t){var n;return!e.Lang.isArray(t)||t.length===0?t=[a,f]:(t.length==1&&(n=this._getDims[1],t[1]=n/2),t[0]=this.node.getX()+t[0],t[1]=this.node.getY()+t[1]),t},rotate:function(n,r,i,s,o,u,a){var f,l=i,c=s;if(!e.Lang.isNumber(l)||!e.Lang.isNumber(c)||l<0||c<0)f=this.target.offsetWidth<this.target.offsetHeight?this.target.offsetWidth/4:this.target.offsetHeight/4,l=f,c=f;e.Lang.isNumber(a)||e.error(t+"Invalid rotation detected."),this.pinch(n,r,l,c,o,u,a)},pinch:function(n,r,i,s,o,a,f){var g,y,b=u,w,E=0,S=i,x=s,T,N,C,k,L,A,O,M,_,D={start:[],end:[]},P={start:[],end:[]},H,B;r=this._calculateDefaultPoint(r),(!e.Lang.isNumber(S)||!e.Lang.isNumber(x)||S<0||x<0)&&e.error(t+"Invalid startRadius and endRadius detected.");if(!e.Lang.isNumber(o)||o<=0)o=l.DURATION_PINCH;if(!e.Lang.isNumber(a))a=0;else{a%=360;while(a<0)a+=360}e.Lang.isNumber(f)||(f=0),e.AsyncQueue.defaults.timeout=b,g=new e.AsyncQueue,N=r[0],C=r[1],O=a,M=a+f,D.start=[N+S*Math.sin(this._toRadian(O)),C-S*Math.cos(this._toRadian(O))],D.end=[N+x*Math.sin(this._toRadian(M)),C-x*Math.cos(this._toRadian(M))],P.start=[N-S*Math.sin(this._toRadian(O)),C+S*Math.cos(this._toRadian(O))],P.end=[N-x*Math.sin(this._toRadian(M)),C+x*Math.cos(this._toRadian(M))],k=1,L=s/i,g.add({fn:function(){var t,n,r,i;t={pageX:D.start[0],pageY:D.start[1],clientX:D.start[0],clientY:D.start[1]},n={pageX:P.start[0],pageY:P.start[1],clientX:P.start[0],clientY:P.start[1]},i=this._createTouchList([e.merge({identifier:E++},t),e.merge({identifier:E++},n)]),r={pageX:(D.start[0]+P.start[0])/2,pageY:(D.start[0]+P.start[1])/2,clientX:(D.start[0]+P.start[0])/2,clientY:(D.start[0]+P.start[1])/2},this._simulateEvent(this.target,c,e.merge({touches:i,targetTouches:i,changedTouches:i,scale:k,rotation:O},r)),e.UA.ios>=2&&this._simulateEvent(this.target,d,e.merge({scale:k,rotation:O},r))},timeout:0,context:this}),H=Math.floor(o/b),T=(x-S)/H,A=(L-k)/H,_=(M-O)/H,B=function(t){var n=S+T*t,r=N+n*Math.sin(this._toRadian(O+_*t)),i=C-n*Math.cos(this._toRadian(O+_*t)),s=N-n*Math.sin(this._toRadian(O+_*t)),o=C+n*Math.cos(this._toRadian(O+_*t)),u=(r+s)/2,a=(i+o)/2,f,l,c,p;f={pageX:r,pageY:i,clientX:r,clientY:i},l={pageX:s,pageY:o,clientX:s,clientY:o},p=this._createTouchList([e.merge({identifier:E++},f),e.merge({identifier:E++},l)]),c={pageX:u,pageY:a,clientX:u,clientY:a},this._simulateEvent(this.target,h,e.merge({touches:p,targetTouches:p,changedTouches:p,scale:k+A*t,rotation:O+_*t},c)),e.UA.ios>=2&&this._simulateEvent(this.target,v,e.merge({scale:k+A*t,rotation:O+_*t},c))};for(y=0;y<H;y++)g.add({fn:B,args:[y],context:this});g.add({fn:function(){var t=this._getEmptyTouchList(),n,r,i,s;n={pageX:D.end[0],pageY:D.end[1],clientX:D.end[0],clientY:D.end[1]},r={pageX:P.end[0],pageY:P.end[1],clientX:P.end[0],clientY:P.end[1]},s=this._createTouchList([e.merge({identifier:E++},n),e.merge({identifier:E++},r)]),i={pageX:(D.end[0]+P.end[0])/2,pageY:(D.end[0]+P.end[1])/2,clientX:(D.end[0]+P.end[0])/2,clientY:(D.end[0]+P.end[1])/2},e.UA.ios>=2&&this._simulateEvent(this.target,m,e.merge({scale:L,rotation:M},i)),this._simulateEvent(this.target,p,e.merge({touches:t,targetTouches:t,changedTouches:s,scale:L,rotation:M},i))},context:this}),n&&e.Lang.isFunction(n)&&g.add({fn:n,context:this.node}),g.run()},tap:function(t,r,i,s,o){var u=new e.AsyncQueue,a=this._getEmptyTouchList(),f,h,d,v,m;r=this._calculateDefaultPoint(r);if(!e.Lang.isNumber(i)||i<1)i=1;e.Lang.isNumber(s)||(s=l.HOLD_TAP),e.Lang.isNumber(o)||(o=l.DELAY_TAP),h={pageX:r[0],pageY:r[1],clientX:r[0],clientY:r[1]},f=this._createTouchList([e.merge({identifier:0},h)]),v=function(){this._simulateEvent(this.target,c,e.merge({touches:f,targetTouches:f,changedTouches:f},h))},m=function(){this._simulateEvent(this.target,p,e.merge({touches:a,targetTouches:a,changedTouches:f},h))};for(d=0;d<i;d++)u.add({fn:v,context:this,timeout:d===0?0:o}),u.add({fn:m,context:this,timeout:s});i>1&&!n&&u.add({fn:function(){this._simulateEvent(this.target,E,h)},context:this}),t&&e.Lang.isFunction(t)&&u.add({fn:t,context:this.node}),u.run()},flick:function(n,r,i,s,o){var u;r=this._calculateDefaultPoint(r),e.Lang.isString(i)?(i=i.toLowerCase(),i!==S&&i!==x&&e.error(t+"(flick): Only x or y axis allowed")):i=S,e.Lang.isNumber(s)||(s=l.DISTANCE_FLICK),e.Lang.isNumber(o)?o>l.MAX_DURATION_FLICK&&(o=l.MAX_DURATION_FLICK):o=l.DURATION_FLICK,Math.abs(s)/o<l.MIN_VELOCITY_FLICK&&(o=Math.abs(s)/l.MIN_VELOCITY_FLICK),u={start:e.clone(r),end:[i===S?r[0]+s:r[0],i===x?r[1]+s:r[1]]},this._move(n,u,o)},move:function(t,n,r){var i;e.Lang.isObject(n)?(e.Lang.isArray(n.point)?n.point=this._calculateDefaultPoint(n.point):n.point=this._calculateDefaultPoint([]),e.Lang.isNumber(n.xdist)||(n.xdist=l.DISTANCE_MOVE),e.Lang.isNumber(n.ydist)||(n.ydist=0)):n={point:this._calculateDefaultPoint([]),xdist:l.
DISTANCE_MOVE,ydist:0},e.Lang.isNumber(r)?r>l.MAX_DURATION_MOVE&&(r=l.MAX_DURATION_MOVE):r=l.DURATION_MOVE,i={start:e.clone(n.point),end:[n.point[0]+n.xdist,n.point[1]+n.ydist]},this._move(t,i,r)},_move:function(t,n,r){var i,s,o=u,d,v,m,g=0,y;e.Lang.isNumber(r)?r>l.MAX_DURATION_MOVE&&(r=l.MAX_DURATION_MOVE):r=l.DURATION_MOVE,e.Lang.isObject(n)?(e.Lang.isArray(n.start)||(n.start=[a,f]),e.Lang.isArray(n.end)||(n.end=[a+l.DISTANCE_MOVE,f])):n={start:[a,f],end:[a+l.DISTANCE_MOVE,f]},e.AsyncQueue.defaults.timeout=o,i=new e.AsyncQueue,i.add({fn:function(){var t={pageX:n.start[0],pageY:n.start[1],clientX:n.start[0],clientY:n.start[1]},r=this._createTouchList([e.merge({identifier:g++},t)]);this._simulateEvent(this.target,c,e.merge({touches:r,targetTouches:r,changedTouches:r},t))},timeout:0,context:this}),d=Math.floor(r/o),v=(n.end[0]-n.start[0])/d,m=(n.end[1]-n.start[1])/d,y=function(t){var r=n.start[0]+v*t,i=n.start[1]+m*t,s={pageX:r,pageY:i,clientX:r,clientY:i},o=this._createTouchList([e.merge({identifier:g++},s)]);this._simulateEvent(this.target,h,e.merge({touches:o,targetTouches:o,changedTouches:o},s))};for(s=0;s<d;s++)i.add({fn:y,args:[s],context:this});i.add({fn:function(){var t={pageX:n.end[0],pageY:n.end[1],clientX:n.end[0],clientY:n.end[1]},r=this._createTouchList([e.merge({identifier:g},t)]);this._simulateEvent(this.target,h,e.merge({touches:r,targetTouches:r,changedTouches:r},t))},timeout:0,context:this}),i.add({fn:function(){var t={pageX:n.end[0],pageY:n.end[1],clientX:n.end[0],clientY:n.end[1]},r=this._getEmptyTouchList(),i=this._createTouchList([e.merge({identifier:g},t)]);this._simulateEvent(this.target,p,e.merge({touches:r,targetTouches:r,changedTouches:i},t))},context:this}),t&&e.Lang.isFunction(t)&&i.add({fn:t,context:this.node}),i.run()},_getEmptyTouchList:function(){return o||(o=this._createTouchList([])),o},_createTouchList:function(n){var r=[],i,o=this;return!!n&&e.Lang.isArray(n)?e.UA.android&&e.UA.android>=4||e.UA.ios&&e.UA.ios>=2?(e.each(n,function(t){t.identifier||(t.identifier=0),t.pageX||(t.pageX=0),t.pageY||(t.pageY=0),t.screenX||(t.screenX=0),t.screenY||(t.screenY=0),r.push(s.createTouch(e.config.win,o.target,t.identifier,t.pageX,t.pageY,t.screenX,t.screenY))}),i=s.createTouchList.apply(s,r)):e.UA.ios&&e.UA.ios<2?e.error(t+": No touch event simulation framework present."):(i=[],e.each(n,function(e){e.identifier||(e.identifier=0),e.clientX||(e.clientX=0),e.clientY||(e.clientY=0),e.pageX||(e.pageX=0),e.pageY||(e.pageY=0),e.screenX||(e.screenX=0),e.screenY||(e.screenY=0),i.push({target:o.target,identifier:e.identifier,clientX:e.clientX,clientY:e.clientY,pageX:e.pageX,pageY:e.pageY,screenX:e.screenX,screenY:e.screenY})}),i.item=function(e){return i[e]}):e.error(t+": Invalid touchPoints passed"),i},_simulateEvent:function(t,r,s){var o;i[r]?n?e.Event.simulate(t,r,s):this._isSingleTouch(s.touches,s.targetTouches,s.changedTouches)?(r={touchstart:b,touchmove:y,touchend:g}[r],s.button=0,s.relatedTarget=null,o=r===g?s.changedTouches:s.touches,s=e.mix(s,{screenX:o.item(0).screenX,screenY:o.item(0).screenY,clientX:o.item(0).clientX,clientY:o.item(0).clientY},!0),e.Event.simulate(t,r,s),r==g&&e.Event.simulate(t,w,s)):e.error("_simulateEvent(): Event '"+r+"' has multi touch objects that can't be simulated in your platform."):e.Event.simulate(t,r,s)},_isSingleTouch:function(e,t,n){return e&&e.length<=1&&t&&t.length<=1&&n&&n.length<=1}},e.GestureSimulation=T,e.GestureSimulation.defaults=l,e.GestureSimulation.GESTURES=r,e.Event.simulateGesture=function(n,i,s,o){n=e.one(n);var u=new e.GestureSimulation(n);i=i.toLowerCase(),!o&&e.Lang.isFunction(s)&&(o=s,s={}),s=s||{};if(r[i])switch(i){case"tap":u.tap(o,s.point,s.times,s.hold,s.delay);break;case"doubletap":u.tap(o,s.point,2);break;case"press":e.Lang.isNumber(s.hold)?s.hold<l.MIN_HOLD_PRESS?s.hold=l.MIN_HOLD_PRESS:s.hold>l.MAX_HOLD_PRESS&&(s.hold=l.MAX_HOLD_PRESS):s.hold=l.HOLD_PRESS,u.tap(o,s.point,1,s.hold);break;case"move":u.move(o,s.path,s.duration);break;case"flick":u.flick(o,s.point,s.axis,s.distance,s.duration);break;case"pinch":u.pinch(o,s.center,s.r1,s.r2,s.duration,s.start,s.rotation);break;case"rotate":u.rotate(o,s.center,s.r1,s.r2,s.duration,s.start,s.rotation)}else e.error(t+": Not a supported gesture simulation: "+i)}},"@VERSION@",{requires:["async-queue","event-simulate","node-screen"]});

YUI.add("node-event-simulate",function(e,t){e.Node.prototype.simulate=function(t,n){e.Event.simulate(e.Node.getDOMNode(this),t,n)},e.Node.prototype.simulateGesture=function(t,n,r){e.Event.simulateGesture(this,t,n,r)}},"@VERSION@",{requires:["node-base","event-simulate","gesture-simulate"]});

YUI.add("file-html5",function(e,t){var n=e.Lang,r=e.bind,i=e.config.win,s=function(e){var t=null;s.isValidFile(e)?t=e:s.isValidFile(e.file)?t=e.file:t=!1,s.superclass.constructor.apply(this,arguments),t&&s.canUpload()&&(this.get("file")||this._set("file",t),this.get("name")||this._set("name",t.name||t.fileName),this.get("size")!=(t.size||t.fileSize)&&this._set("size",t.size||t.fileSize),this.get("type")||this._set("type",t.type),t.hasOwnProperty("lastModifiedDate")&&!this.get("dateModified")&&this._set("dateModified",t.lastModifiedDate))};e.extend(s,e.Base,{initializer:function(t){this.get("id")||this._set("id",e.guid("file"))},_uploadEventHandler:function(e){var t=this.get("xhr");switch(e.type){case"progress":this.fire("uploadprogress",{originEvent:e,bytesLoaded:e.loaded,bytesTotal:this.get("size"),percentLoaded:Math.min(100,Math.round(1e4*e.loaded/this.get("size"))/100)}),this._set("bytesUploaded",e.loaded);break;case"load":if(t.status>=200&&t.status<=299){this.fire("uploadcomplete",{originEvent:e,data:e.target.responseText});var n=t.upload,r=this.get("boundEventHandler");n.removeEventListener("progress",r),n.removeEventListener("error",r),n.removeEventListener("abort",r),t.removeEventListener("load",r),t.removeEventListener("error",r),t.removeEventListener("readystatechange",r),this._set("xhr",null)}else this.fire("uploaderror",{originEvent:e,data:t.responseText,status:t.status,statusText:t.statusText,source:"http"});break;case"error":this.fire("uploaderror",{originEvent:e,data:t.responseText,status:t.status,statusText:t.statusText,source:"io"});break;case"abort":this.fire("uploadcancel",{originEvent:e});break;case"readystatechange":this.fire("readystatechange",{readyState:e.target.readyState,originEvent:e})}},startUpload:function(t,n,i){this._set("bytesUploaded",0),this._set("xhr",new XMLHttpRequest),this._set("boundEventHandler",r(this._uploadEventHandler,this));var s=new FormData,o=i||"Filedata",u=this.get("xhr"),a=this.get("xhr").upload,f=this.get("boundEventHandler");e.each(n,function(e,t){s.append(t,e)}),s.append(o,this.get("file")),u.addEventListener("loadstart",f,!1),a.addEventListener("progress",f,!1),u.addEventListener("load",f,!1),u.addEventListener("error",f,!1),a.addEventListener("error",f,!1),a.addEventListener("abort",f,!1),u.addEventListener("abort",f,!1),u.addEventListener("loadend",f,!1),u.addEventListener("readystatechange",f,!1),u.open("POST",t,!0),u.withCredentials=this.get("xhrWithCredentials"),e.each(this.get("xhrHeaders"),function(e,t){u.setRequestHeader(t,e)}),u.send(s),this.fire("uploadstart",{xhr:u})},cancelUpload:function(){var e=this.get("xhr");e&&e.abort()}},{NAME:"file",TYPE:"html5",ATTRS:{id:{writeOnce:"initOnly",value:null},size:{writeOnce:"initOnly",value:0},name:{writeOnce:"initOnly",value:null},dateCreated:{writeOnce:"initOnly",value:null},dateModified:{writeOnce:"initOnly",value:null},bytesUploaded:{readOnly:!0,value:0},type:{writeOnce:"initOnly",value:null},file:{writeOnce:"initOnly",value:null},xhr:{readOnly:!0,value:null},xhrHeaders:{value:{}},xhrWithCredentials:{value:!0},boundEventHandler:{readOnly:!0,value:null}},isValidFile:function(e){return i&&i.File&&e instanceof File},canUpload:function(){return i&&i.FormData&&i.XMLHttpRequest}}),e.FileHTML5=s},"@VERSION@",{requires:["base"]});

YUI.add("uploader-queue",function(e,t){var n=function(){this.queuedFiles=[],this.uploadRetries={},this.numberOfUploads=0,this.currentUploadedByteValues={},this.currentFiles={},this.totalBytesUploaded=0,this.totalBytes=0,n.superclass.constructor.apply(this,arguments)};e.extend(n,e.Base,{_currentState:n.STOPPED,initializer:function(){},_uploadStartHandler:function(e){var t=e;t.file=e.target,t.originEvent=e,this.fire("uploadstart",t)},_uploadErrorHandler:function(e){var t=this.get("errorAction"),r=e,i,s;r.file=e.target,r.originEvent=e,this.numberOfUploads-=1,delete this.currentFiles[e.target.get("id")],this._detachFileEvents(e.target),e.target.cancelUpload(),t===n.STOP?this.pauseUpload():t===n.RESTART_ASAP?(i=e.target.get("id"),s=this.uploadRetries[i]||0,s<this.get("retryCount")&&(this.uploadRetries[i]=s+1,this.addToQueueTop(e.target)),this._startNextFile()):t===n.RESTART_AFTER&&(i=e.target.get("id"),s=this.uploadRetries[i]||0,s<this.get("retryCount")&&(this.uploadRetries[i]=s+1,this.addToQueueBottom(e.target)),this._startNextFile()),this.fire("uploaderror",r)},_startNextFile:function(){if(this.queuedFiles.length>0){var e=this.queuedFiles.shift(),t=e.get("id"),n=this.get("perFileParameters"),r=n.hasOwnProperty(t)?n[t]:n;this.currentUploadedByteValues[t]=0,e.on("uploadstart",this._uploadStartHandler,this),e.on("uploadprogress",this._uploadProgressHandler,this),e.on("uploadcomplete",this._uploadCompleteHandler,this),e.on("uploaderror",this._uploadErrorHandler,this),e.on("uploadcancel",this._uploadCancelHandler,this),e.set("xhrHeaders",this.get("uploadHeaders")),e.set("xhrWithCredentials",this.get("withCredentials")),e.startUpload(this.get("uploadURL"),r,this.get("fileFieldName")),this._registerUpload(e)}},_registerUpload:function(e){this.numberOfUploads+=1,this.currentFiles[e.get("id")]=e},_unregisterUpload:function(e){this.numberOfUploads>0&&(this.numberOfUploads-=1),delete this.currentFiles[e.get("id")],delete this.uploadRetries[e.get("id")],this._detachFileEvents(e)},_detachFileEvents:function(e){e.detach("uploadstart",this._uploadStartHandler),e.detach("uploadprogress",this._uploadProgressHandler),e.detach("uploadcomplete",this._uploadCompleteHandler),e.detach("uploaderror",this._uploadErrorHandler),e.detach("uploadcancel",this._uploadCancelHandler)},_uploadCompleteHandler:function(t){this._unregisterUpload(t.target),this.totalBytesUploaded+=t.target.get("size"),delete this.currentUploadedByteValues[t.target.get("id")],this.queuedFiles.length>0&&this._currentState===n.UPLOADING&&this._startNextFile();var r=t,i=this.totalBytesUploaded,s=Math.min(100,Math.round(1e4*i/this.totalBytes)/100);r.file=t.target,r.originEvent=t,e.each(this.currentUploadedByteValues,function(e){i+=e}),this.fire("totaluploadprogress",{bytesLoaded:i,bytesTotal:this.totalBytes,percentLoaded:s}),this.fire("uploadcomplete",r),this.queuedFiles.length===0&&this.numberOfUploads<=0&&(this.fire("alluploadscomplete"),this._currentState=n.STOPPED)},_uploadCancelHandler:function(e){var t=e;t.originEvent=e,t.file=e.target,this.fire("uploadcancel",t)},_uploadProgressHandler:function(t){this.currentUploadedByteValues[t.target.get("id")]=t.bytesLoaded;var n=t,r=this.totalBytesUploaded,i=Math.min(100,Math.round(1e4*r/this.totalBytes)/100);n.originEvent=t,n.file=t.target,this.fire("uploadprogress",n),e.each(this.currentUploadedByteValues,function(e){r+=e}),this.fire("totaluploadprogress",{bytesLoaded:r,bytesTotal:this.totalBytes,percentLoaded:i})},startUpload:function(){this.queuedFiles=this.get("fileList").slice(0),this.numberOfUploads=0,this.currentUploadedByteValues={},this.currentFiles={},this.totalBytesUploaded=0,this._currentState=n.UPLOADING;while(this.numberOfUploads<this.get("simUploads")&&this.queuedFiles.length>0)this._startNextFile()},pauseUpload:function(){this._currentState=n.STOPPED},restartUpload:function(){this._currentState=n.UPLOADING;while(this.numberOfUploads<this.get("simUploads"))this._startNextFile()},forceReupload:function(e){var t=e.get("id");this.currentFiles.hasOwnProperty(t)&&(e.cancelUpload(),this._unregisterUpload(e),this.addToQueueTop(e),this._startNextFile())},addToQueueTop:function(e){this.queuedFiles.unshift(e)},addToQueueBottom:function(e){this.queuedFiles.push(e)},cancelUpload:function(e){var t,r,i;if(e){t=e.get("id");if(this.currentFiles[t])this.currentFiles[t].cancelUpload(),this._unregisterUpload(this.currentFiles[t]),this._currentState===n.UPLOADING&&this._startNextFile();else for(r=0,len=this.queuedFiles.length;r<len;r++)if(this.queuedFiles[r].get("id")===t){this.queuedFiles.splice(r,1);break}}else{for(i in this.currentFiles)this.currentFiles[i].cancelUpload(),this._unregisterUpload(this.currentFiles[i]);this.currentUploadedByteValues={},this.currentFiles={},this.totalBytesUploaded=0,this.fire("alluploadscancelled"),this._currentState=n.STOPPED}}},{CONTINUE:"continue",STOP:"stop",RESTART_ASAP:"restartasap",RESTART_AFTER:"restartafter",STOPPED:"stopped",UPLOADING:"uploading",NAME:"uploaderqueue",ATTRS:{simUploads:{value:2,validator:function(e){return e>=1&&e<=5}},errorAction:{value:"continue",validator:function(e){return e===n.CONTINUE||e===n.STOP||e===n.RESTART_ASAP||e===n.RESTART_AFTER}},bytesUploaded:{readOnly:!0,value:0},bytesTotal:{readOnly:!0,value:0},fileList:{value:[],lazyAdd:!1,setter:function(t){var n=t;return e.Array.each(n,function(e){this.totalBytes+=e.get("size")},this),t}},fileFieldName:{value:"Filedata"},uploadURL:{value:""},uploadHeaders:{value:{}},withCredentials:{value:!0},perFileParameters:{value:{}},retryCount:{value:3}}}),e.namespace("Uploader"),e.Uploader.Queue=n},"@VERSION@",{requires:["base"]});

YUI.add("uploader-html5",function(e,t){function i(){i.superclass.constructor.apply(this,arguments)}var n=e.Lang.sub,r=e.Uploader.Queue;e.UploaderHTML5=e.extend(i,e.Widget,{_fileInputField:null,_buttonBinding:null,queue:null,initializer:function(){this._fileInputField=null,this.queue=null,this._buttonBinding=null,this._fileList=[],this.publish("fileselect"),this.publish("uploadstart"),this.publish("fileuploadstart"),this.publish("uploadprogress"),this.publish("totaluploadprogress"),this.publish("uploadcomplete"),this.publish("alluploadscomplete"),this.publish("uploaderror"),this.publish("dragenter"),this.publish("dragover"),this.publish("dragleave"),this.publish("drop")},renderUI:function(){var t=this.get("contentBox"),n=this.get("selectFilesButton");n.setStyles({width:"100%",height:"100%"}),t.append(n),this._fileInputField=e.Node.create(i.HTML5FILEFIELD_TEMPLATE),t.append(this._fileInputField)},bindUI:function(){this._bindSelectButton(),this._setMultipleFiles(),this._setFileFilters(),this._bindDropArea(),this._triggerEnabled(),this.after("multipleFilesChange",this._setMultipleFiles,this),this.after("fileFiltersChange",this._setFileFilters,this),this.after("enabledChange",this._triggerEnabled,this),this.after("selectFilesButtonChange",this._bindSelectButton,this),this.after("dragAndDropAreaChange",this._bindDropArea,this),this.after("tabIndexChange",function(){this.get("selectFilesButton").set("tabIndex",this.get("tabIndex"))},this),this._fileInputField.on("change",this._updateFileList,this),this._fileInputField.on("click",function(e){e.stopPropagation()},this),this.get("selectFilesButton").set("tabIndex",this.get("tabIndex"))},_rebindFileField:function(){this._fileInputField.remove(!0),this._fileInputField=e.Node.create(i.HTML5FILEFIELD_TEMPLATE),this.get("contentBox").append(this._fileInputField),this._fileInputField.on("change",this._updateFileList,this),this._setMultipleFiles(),this._setFileFilters()},_bindDropArea:function(e){var t=e||{prevVal:null},n=this.get("dragAndDropArea");t.prevVal!==null&&(t.prevVal.detach("drop",this._ddEventHandler),t.prevVal.detach("dragenter",this._ddEventHandler),t.prevVal.detach("dragover",this._ddEventHandler),t.prevVal.detach("dragleave",this._ddEventHandler)),n!==null&&(n.on("drop",this._ddEventHandler,this),n.on("dragenter",this._ddEventHandler,this),n.on("dragover",this._ddEventHandler,this),n.on("dragleave",this._ddEventHandler,this))},_bindSelectButton:function(){this._buttonBinding=this.get("selectFilesButton").on("click",this.openFileSelectDialog,this)},_ddEventHandler:function(t){t.stopPropagation(),t.preventDefault();if(e.Array.indexOf(t._event.dataTransfer.types,"Files")>-1)switch(t.type){case"dragenter":this.fire("dragenter");break;case"dragover":this.fire("dragover");break;case"dragleave":this.fire("dragleave");break;case"drop":var n=t._event.dataTransfer.files,r=[],i=this.get("fileFilterFunction"),s;i?e.each(n,function(t){var n=new e.FileHTML5(t);i(n)&&r.push(n)}):e.each(n,function(t){r.push(new e.FileHTML5(t))}),r.length>0&&(s=this.get("fileList"),this.set("fileList",this.get("appendNewFiles")?s.concat(r):r),this.fire("fileselect",{fileList:r})),this.fire("drop",{fileList:r})}},_setButtonClass:function(e,t){t?this.get("selectFilesButton").addClass(this.get("buttonClassNames")[e]):this.get("selectFilesButton").removeClass(this.get("buttonClassNames")[e])},_setMultipleFiles:function(){this.get("multipleFiles")===!0?this._fileInputField.set("multiple","multiple"):this._fileInputField.set("multiple","")},_setFileFilters:function(){this.get("fileFilters").length>0?this._fileInputField.set("accept",this.get("fileFilters").join(",")):this._fileInputField.set("accept","")},_triggerEnabled:function(){this.get("enabled")&&this._buttonBinding===null?(this._bindSelectButton(),this._setButtonClass("disabled",!1),this.get("selectFilesButton").setAttribute("aria-disabled","false")):!this.get("enabled")&&this._buttonBinding&&(this._buttonBinding.detach(),this._buttonBinding=null,this._setButtonClass("disabled",!0),this.get("selectFilesButton").setAttribute("aria-disabled","true"))},_getFileList:function(){return this._fileList.concat()},_setFileList:function(e){return this._fileList=e.concat(),this._fileList.concat()},_updateFileList:function(t){var n=t.target.getDOMNode().files,r=[],i=this.get("fileFilterFunction"),s;i?e.each(n,function(t){var n=new e.FileHTML5(t);i(n)&&r.push(n)}):e.each(n,function(t){r.push(new e.FileHTML5(t))}),r.length>0&&(s=this.get("fileList"),this.set("fileList",this.get("appendNewFiles")?s.concat(r):r),this.fire("fileselect",{fileList:r})),this._rebindFileField()},_uploadEventHandler:function(e){switch(e.type){case"file:uploadstart":this.fire("fileuploadstart",e);break;case"file:uploadprogress":this.fire("uploadprogress",e);break;case"uploaderqueue:totaluploadprogress":this.fire("totaluploadprogress",e);break;case"file:uploadcomplete":this.fire("uploadcomplete",e);break;case"uploaderqueue:alluploadscomplete":this.queue=null,this.fire("alluploadscomplete",e);break;case"file:uploaderror":case"uploaderqueue:uploaderror":this.fire("uploaderror",e);break;case"file:uploadcancel":case"uploaderqueue:uploadcancel":this.fire("uploadcancel",e)}},openFileSelectDialog:function(){var e=this._fileInputField.getDOMNode();e.click&&e.click()},upload:function(t,n,r){var i=n||this.get("uploadURL"),s=r||this.get("postVarsPerFile"),o=t.get("id");s=s.hasOwnProperty(o)?s[o]:s,t instanceof e.FileHTML5&&(t.on("uploadstart",this._uploadEventHandler,this),t.on("uploadprogress",this._uploadEventHandler,this),t.on("uploadcomplete",this._uploadEventHandler,this),t.on("uploaderror",this._uploadEventHandler,this),t.on("uploadcancel",this._uploadEventHandler,this),t.startUpload(i,s,this.get("fileFieldName")))},uploadAll:function(e,t){this.uploadThese(this.get("fileList"),e,t)},uploadThese:function(t,n,i){if(!this.queue){var s=n||this.get("uploadURL"),o=i||this.get("postVarsPerFile");this.queue=new r({simUploads:this.get("simLimit"),errorAction:this.get("errorAction"
),fileFieldName:this.get("fileFieldName"),fileList:t,uploadURL:s,perFileParameters:o,retryCount:this.get("retryCount"),uploadHeaders:this.get("uploadHeaders"),withCredentials:this.get("withCredentials")}),this.queue.on("uploadstart",this._uploadEventHandler,this),this.queue.on("uploadprogress",this._uploadEventHandler,this),this.queue.on("totaluploadprogress",this._uploadEventHandler,this),this.queue.on("uploadcomplete",this._uploadEventHandler,this),this.queue.on("alluploadscomplete",this._uploadEventHandler,this),this.queue.on("uploadcancel",this._uploadEventHandler,this),this.queue.on("uploaderror",this._uploadEventHandler,this),this.queue.startUpload(),this.fire("uploadstart")}else this.queue._currentState===r.UPLOADING&&(this.queue.set("perFileParameters",this.get("postVarsPerFile")),e.each(t,function(e){this.queue.addToQueueBottom(e)},this))}},{HTML5FILEFIELD_TEMPLATE:"<input type='file' style='visibility:hidden; width:0px; height: 0px;'>",SELECT_FILES_BUTTON:'<button type="button" class="yui3-button" role="button" aria-label="{selectButtonLabel}" tabindex="{tabIndex}">{selectButtonLabel}</button>',TYPE:"html5",NAME:"uploader",ATTRS:{appendNewFiles:{value:!0},buttonClassNames:{value:{hover:"yui3-button-hover",active:"yui3-button-active",disabled:"yui3-button-disabled",focus:"yui3-button-selected"}},dragAndDropArea:{value:null,setter:function(t){return e.one(t)}},enabled:{value:!0},errorAction:{value:"continue",validator:function(e){return e===r.CONTINUE||e===r.STOP||e===r.RESTART_ASAP||e===r.RESTART_AFTER}},fileFilters:{value:[]},fileFilterFunction:{value:null},fileFieldName:{value:"Filedata"},fileList:{value:[],getter:"_getFileList",setter:"_setFileList"},multipleFiles:{value:!1},postVarsPerFile:{value:{}},selectButtonLabel:{value:"Select Files"},selectFilesButton:{valueFn:function(){return e.Node.create(n(e.UploaderHTML5.SELECT_FILES_BUTTON,{selectButtonLabel:this.get("selectButtonLabel"),tabIndex:this.get("tabIndex")}))}},simLimit:{value:2,validator:function(e){return e>=1&&e<=5}},uploadURL:{value:""},uploadHeaders:{value:{}},withCredentials:{value:!0},retryCount:{value:3}}}),e.UploaderHTML5.Queue=r},"@VERSION@",{requires:["widget","node-event-simulate","file-html5","uploader-queue"]});

YUI.add("swfdetect",function(e,t){function c(e){return parseInt(e,10)}function h(e){i.isNumber(c(e[0]))&&(r.flashMajor=e[0]),i.isNumber(c(e[1]))&&(r.flashMinor=e[1]),i.isNumber(c(e[2]))&&(r.flashRev=e[2])}var n=0,r=e.UA,i=e.Lang,s="ShockwaveFlash",o,u,a,f,l;if(r.gecko||r.webkit||r.opera){if(o=navigator.mimeTypes["application/x-shockwave-flash"])if(u=o.enabledPlugin)a=u.description.replace(/\s[rd]/g,".").replace(/[A-Za-z\s]+/g,"").split("."),h(a)}else if(r.ie){try{f=new ActiveXObject(s+"."+s+".6"),f.AllowScriptAccess="always"}catch(p){f!==null&&(n=6)}if(n===0)try{l=new ActiveXObject(s+"."+s),a=l.GetVariable("$version").replace(/[A-Za-z\s]+/g,"").split(","),h(a)}catch(d){}}e.SWFDetect={getFlashVersion:function(){return String(r.flashMajor)+"."+String(r.flashMinor)+"."+String(r.flashRev)},isFlashVersionAtLeast:function(e,t,n){var i=c(r.flashMajor),s=c(r.flashMinor),o=c(r.flashRev);return e=c(e||0),t=c(t||0),n=c(n||0),e===i?t===s?n<=o:t<s:e<i}}},"@VERSION@",{requires:["yui-base"]});

/*
 YUI 3.17.2 (build 9c3c78e)
 Copyright 2014 Yahoo! Inc. All rights reserved.
 Licensed under the BSD License.
 http://yuilibrary.com/license/
 */

YUI.add('uploader-flash', function(Y, NAME) {

    /**
     * This module provides a UI for file selection and multiple file upload capability using
     * Flash as a transport engine.
     * The supported features include: automatic upload queue management, upload progress
     * tracking, file filtering, server response retrieval and error reporting.
     *
     * @module uploader-flash
     * @deprecated
     */

// Shorthands for external modules
    var substitute = Y.Lang.sub,
	    UploaderQueue = Y.Uploader.Queue;


    /**
     * Embed a Flash applications in a standard manner and communicate with it
     * via External Interface.
     * @module swf
     */

    var Event = Y.Event,
	    SWFDetect = Y.SWFDetect,
	    Lang = Y.Lang,
	    uA = Y.UA,
	    Node = Y.Node,
	    Escape = Y.Escape,
	    // private
	    FLASH_CID = "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000",
	    FLASH_TYPE = "application/x-shockwave-flash",
	    FLASH_VER = "10.0.22",
	    EXPRESS_INSTALL_URL = "http://fpdownload.macromedia.com/pub/flashplayer/update/current/swf/autoUpdater.swf?" + Math.random(),
	    EVENT_HANDLER = "SWF.eventHandler",
	    possibleAttributes = {align: "", allowFullScreen: "", allowNetworking: "", allowScriptAccess: "", base: "", bgcolor: "", loop: "", menu: "", name: "", play: "", quality: "", salign: "", scale: "", tabindex: "", wmode: ""};

    /**
     * The SWF utility is a tool for embedding Flash applications in HTML pages.
     * @module swf
     * @title SWF Utility
     * @requires event-custom, node, swfdetect
     */

    /**
     * Creates the SWF instance and keeps the configuration data
     *
     * @class SWF
     * @uses Y.Event.Target
     * @constructor
     * @param {String|HTMLElement} id The id of the element, or the element itself that the SWF will be inserted into.
     *        The width and height of the SWF will be set to the width and height of this container element.
     * @param {String} swfURL The URL of the SWF to be embedded into the page.
     * @param {Object} p_oAttributes (optional) Configuration parameters for the Flash application and values for Flashvars
     *        to be passed to the SWF. The p_oAttributes object allows the following additional properties:
     *        <dl>
     *          <dt>version : String</dt>
     *          <dd>The minimum version of Flash required on the user's machine.</dd>
     *          <dt>fixedAttributes : Object</dt>
     *          <dd>An object literal containing one or more of the following String keys and their values: <code>align,
     *              allowFullScreen, allowNetworking, allowScriptAccess, base, bgcolor, menu, name, quality, salign, scale,
     *              tabindex, wmode.</code> event from the thumb</dd>
     *        </dl>
     */

    function SWF(p_oElement /*:String*/, swfURL /*:String*/, p_oAttributes /*:Object*/) {

	this._id = Y.guid("yuiswf");


	var _id = this._id;
	var oElement = Node.one(p_oElement);

	var p_oAttributes = p_oAttributes || {};

	var flashVersion = p_oAttributes.version || FLASH_VER;

	var flashVersionSplit = (flashVersion + '').split(".");
	var isFlashVersionRight = SWFDetect.isFlashVersionAtLeast(parseInt(flashVersionSplit[0], 10), parseInt(flashVersionSplit[1], 10), parseInt(flashVersionSplit[2], 10));
	var canExpressInstall = (SWFDetect.isFlashVersionAtLeast(8, 0, 0));
	var shouldExpressInstall = canExpressInstall && !isFlashVersionRight && p_oAttributes.useExpressInstall;
	var flashURL = (shouldExpressInstall) ? EXPRESS_INSTALL_URL : swfURL;
	var objstring = '<object ';
	var w, h;
	var flashvarstring = "yId=" + Y.id + "&YUISwfId=" + _id + "&YUIBridgeCallback=" + EVENT_HANDLER + "&allowedDomain=" + document.location.hostname;

	Y.SWF._instances[_id] = this;
	if (oElement && (isFlashVersionRight || shouldExpressInstall) && flashURL) {
	    objstring += 'id="' + _id + '" ';
	    if (uA.ie) {
		objstring += 'classid="' + FLASH_CID + '" ';
	    } else {
		objstring += 'type="' + FLASH_TYPE + '" data="' + Escape.html(flashURL) + '" ';
	    }

	    w = "100%";
	    h = "100%";

	    objstring += 'width="' + w + '" height="' + h + '">';

	    if (uA.ie) {
		objstring += '<param name="movie" value="' + Escape.html(flashURL) + '"/>';
	    }

	    for (var attribute in p_oAttributes.fixedAttributes) {
		if (possibleAttributes.hasOwnProperty(attribute)) {
		    objstring += '<param name="' + Escape.html(attribute) + '" value="' + Escape.html(p_oAttributes.fixedAttributes[attribute]) + '"/>';
		}
	    }

	    for (var flashvar in p_oAttributes.flashVars) {
		var fvar = p_oAttributes.flashVars[flashvar];
		if (Lang.isString(fvar)) {
		    flashvarstring += "&" + Escape.html(flashvar) + "=" + Escape.html(encodeURIComponent(fvar));
		}
	    }

	    if (flashvarstring) {
		objstring += '<param name="flashVars" value="' + flashvarstring + '"/>';
	    }

	    objstring += "</object>";
	    //using innerHTML as setHTML/setContent causes some issues with ExternalInterface for IE versions of the player
	    oElement.set("innerHTML", objstring);

	    this._swf = Node.one("#" + _id);
	} else {
	    /**
	     * Fired when the Flash player version on the user's machine is
	     * below the required value.
	     *
	     * @event wrongflashversion
	     */
	    var event = {};
	    event.type = "wrongflashversion";
	    this.publish("wrongflashversion", {fireOnce: true});
	    this.fire("wrongflashversion", event);
	}
    }

    /**
     * @private
     * The static collection of all instances of the SWFs on the page.
     * @property _instances
     * @type Object
     */

    SWF._instances = SWF._instances || {};

    /**
     * @private
     * Handles an event coming from within the SWF and delegate it
     * to a specific instance of SWF.
     * @method eventHandler
     * @param swfid {String} the id of the SWF dispatching the event
     * @param event {Object} the event being transmitted.
     */
    SWF.eventHandler = function(swfid, event) {
	SWF._instances[swfid]._eventHandler(event);
    };

    SWF.prototype = {
	/**
	 * @private
	 * Propagates a specific event from Flash to JS.
	 * @method _eventHandler
	 * @param event {Object} The event to be propagated from Flash.
	 */
	_eventHandler: function(event) {
	    if (event.type === "swfReady") {
		this.publish("swfReady", {fireOnce: true});
		this.fire("swfReady", event);
	    } else if (event.type === "log") {
		Y.log(event.message, event.category, this.toString());
	    } else {
		this.fire(event.type, event);
	    }
	},
	/**
	 * Calls a specific function exposed by the SWF's
	 * ExternalInterface.
	 * @method callSWF
	 * @param func {String} the name of the function to call
	 * @param args {Array} the set of arguments to pass to the function.
	 */

	callSWF: function(func, args) {
	    if (!args) {
		args = [];
	    }
	    ;
	    if (this._swf._node[func]) {
		// return (this._swf._node[func].apply(this._swf._node, args));
		return this._swf._node[func].apply(this._swf._node, args);
	    } else {
		return null;
	    }
	    ;
	},
	/**
	 * Public accessor to the unique name of the SWF instance.
	 *
	 * @method toString
	 * @return {String} Unique name of the SWF instance.
	 */
	toString: function()
	{
	    return "SWF " + this._id;
	}
    };

    Y.augment(SWF, Y.EventTarget);

    Y.SWF = SWF;
    /**
     * The FileFlash class provides a wrapper for a file pointer stored in Flash. The File wrapper
     * also implements the mechanics for uploading a file and tracking its progress.
     * @module file-flash
     */
    /**
     * The class provides a wrapper for a file pointer in Flash.
     * @class FileFlash
     * @extends Base
     * @constructor
     * @param {Object} config Configuration object.
     */

    var FileFlash = function(o) {
	FileFlash.superclass.constructor.apply(this, arguments);
    };

    Y.extend(FileFlash, Y.Base, {
	/**
	 * Construction logic executed during FileFlash instantiation.
	 *
	 * @method initializer
	 * @protected
	 */
	initializer: function(cfg) {
	    if (!this.get("id")) {
		this._set("id", Y.guid("file"));
	    }
	},
	/**
	 * Handler of events dispatched by the Flash player.
	 *
	 * @method _swfEventHandler
	 * @param {Event} event The event object received from the Flash player.
	 * @protected
	 */
	_swfEventHandler: function(event) {
	    if (event.id === this.get("id")) {
		switch (event.type) {
		    /**
		     * Signals that this file's upload has started.
		     *
		     * @event uploadstart
		     * @param event {Event} The event object for the `uploadstart` with the
		     *                      following payload:
		     *  <dl>
		     *      <dt>uploader</dt>
		     *          <dd>The Y.SWF instance of Flash uploader that's handling the upload.</dd>
		     *  </dl>
		     */
		    case "uploadstart":
			this.fire("uploadstart", {uploader: this.get("uploader")});
			break;
		    case "uploadprogress":

			/**
			 * Signals that progress has been made on the upload of this file.
			 *
			 * @event uploadprogress
			 * @param event {Event} The event object for the `uploadprogress` with the
			 *                      following payload:
			 *  <dl>
			 *      <dt>originEvent</dt>
			 *          <dd>The original event fired by the Flash uploader instance.</dd>
			 *      <dt>bytesLoaded</dt>
			 *          <dd>The number of bytes of the file that has been uploaded.</dd>
			 *      <dt>bytesTotal</dt>
			 *          <dd>The total number of bytes in the file (the file size)</dd>
			 *      <dt>percentLoaded</dt>
			 *          <dd>The fraction of the file that has been uploaded, out of 100.</dd>
			 *  </dl>
			 */
			this.fire("uploadprogress", {originEvent: event,
			    bytesLoaded: event.bytesLoaded,
			    bytesTotal: event.bytesTotal,
			    percentLoaded: Math.min(100, Math.round(10000 * event.bytesLoaded / event.bytesTotal) / 100)
			});
			this._set("bytesUploaded", event.bytesLoaded);
			break;
		    case "uploadcomplete":

			/**
			 * Signals that this file's upload has completed, but data has not yet been received from the server.
			 *
			 * @event uploadfinished
			 * @param event {Event} The event object for the `uploadfinished` with the
			 *                      following payload:
			 *  <dl>
			 *      <dt>originEvent</dt>
			 *          <dd>The original event fired by the Flash player instance.</dd>
			 *  </dl>
			 */
			//for(var item in event){
			//    console.log(item);
			//}
			this.fire("uploadfinished", {originEvent: event});
			//this.fire("uploadcomplete", {originEvent: event});
			break;
		    case "uploadcompletedata":
			/**
			 * Signals that this file's upload has completed and data has been received from the server.
			 *
			 * @event uploadcomplete
			 * @param event {Event} The event object for the `uploadcomplete` with the
			 *                      following payload:
			 *  <dl>
			 *      <dt>originEvent</dt>
			 *          <dd>The original event fired by the Flash player instance.</dd>
			 *      <dt>data</dt>
			 *          <dd>The data returned by the server.</dd>
			 *  </dl>
			 */
			this.fire("uploadcomplete", {originEvent: event,
			    data: event.data});
			break;
		    case "uploadcancel":

			/**
			 * Signals that this file's upload has been cancelled.
			 *
			 * @event uploadcancel
			 * @param event {Event} The event object for the `uploadcancel` with the
			 *                      following payload:
			 *  <dl>
			 *      <dt>originEvent</dt>
			 *          <dd>The original event fired by the Flash player instance.</dd>
			 *  </dl>
			 */
			this.fire("uploadcancel", {originEvent: event});
			break;
		    case "uploaderror":

			/**
			 * Signals that this file's upload has encountered an error.
			 *
			 * @event uploaderror
			 * @param event {Event} The event object for the `uploaderror` with the
			 *                      following payload:
			 *  <dl>
			 *      <dt>originEvent</dt>
			 *          <dd>The original event fired by the Flash player instance.</dd>
			 *      <dt>status</dt>
			 *          <dd>The status code reported by the Flash Player. If it's an HTTP error,
			 *                then this corresponds to the HTTP status code received by the uploader.</dd>
			 *      <dt>statusText</dt>
			 *          <dd>The text of the error event reported by the Flash Player.</dd>
			 *      <dt>source</dt>
			 *          <dd>Either "http" (if it's an HTTP error), or "io" (if it's a network transmission
			 *              error.)</dd>
			 *  </dl>
			 */
			this.fire("uploaderror", {originEvent: event, status: event.status, statusText: event.message, source: event.source});

		}
	    }
	},
	/**
	 * Starts the upload of a specific file.
	 *
	 * @method startUpload
	 * @param url {String} The URL to upload the file to.
	 * @param parameters {Object} (optional) A set of key-value pairs to send as variables along with the file upload HTTP request.
	 * @param fileFieldName {String} (optional) The name of the POST variable that should contain the uploaded file ('Filedata' by default)
	 */
	startUpload: function(url, parameters, fileFieldName) {

	    if (this.get("uploader")) {

		var myUploader = this.get("uploader"),
			fileField = fileFieldName || "Filedata",
			id = this.get("id"),
			params = parameters || null;

		this._set("bytesUploaded", 0);

		myUploader.on("uploadstart", this._swfEventHandler, this);
		myUploader.on("uploadprogress", this._swfEventHandler, this);
		myUploader.on("uploadcomplete", this._swfEventHandler, this);
		myUploader.on("uploadcompletedata", this._swfEventHandler, this);
		myUploader.on("uploaderror", this._swfEventHandler, this);

		myUploader.callSWF("upload", [id, url, params, fileField]);
	    }

	},
	/**
	 * Cancels the upload of a specific file, if currently in progress.
	 *
	 * @method cancelUpload
	 */
	cancelUpload: function() {
	    if (this.get("uploader")) {
		this.get("uploader").callSWF("cancel", [this.get("id")]);
		this.fire("uploadcancel");
	    }
	}

    }, {
	/**
	 * The identity of the class.
	 *
	 * @property NAME
	 * @type String
	 * @default 'file'
	 * @readOnly
	 * @protected
	 * @static
	 */
	NAME: 'file',
	/**
	 * The type of transport.
	 *
	 * @property TYPE
	 * @type String
	 * @default 'flash'
	 * @readOnly
	 * @protected
	 * @static
	 */
	TYPE: "flash",
	/**
	 * Static property used to define the default attribute configuration of
	 * the File.
	 *
	 * @property ATTRS
	 * @type {Object}
	 * @protected
	 * @static
	 */
	ATTRS: {
	    /**
	     * A String containing the unique id of the file wrapped by the FileFlash instance.
	     * The id is supplied by the Flash player uploader.
	     *
	     * @attribute id
	     * @type {String}
	     * @initOnly
	     */
	    id: {
		writeOnce: "initOnly",
		value: null
	    },
	    /**
	     * The size of the file wrapped by FileFlash. This value is supplied by the Flash player uploader.
	     *
	     * @attribute size
	     * @type {Number}
	     * @initOnly
	     */
	    size: {
		writeOnce: "initOnly",
		value: 0
	    },
	    /**
	     * The name of the file wrapped by FileFlash. This value is supplied by the Flash player uploader.
	     *
	     * @attribute name
	     * @type {String}
	     * @initOnly
	     */
	    name: {
		writeOnce: "initOnly",
		value: null
	    },
	    /**
	     * The date that the file wrapped by FileFlash was created on. This value is supplied by the Flash player uploader.
	     *
	     * @attribute dateCreated
	     * @type {Date}
	     * @initOnly
	     */
	    dateCreated: {
		writeOnce: "initOnly",
		value: null
	    },
	    /**
	     * The date that the file wrapped by FileFlash was last modified on. This value is supplied by the Flash player uploader.
	     *
	     * @attribute dateModified
	     * @type {Date}
	     * @initOnly
	     */
	    dateModified: {
		writeOnce: "initOnly",
		value: null
	    },
	    /**
	     * The number of bytes of the file that has been uploaded to the server. This value is
	     * non-zero only while a file is being uploaded.
	     *
	     * @attribute bytesUploaded
	     * @type {Date}
	     * @readOnly
	     */
	    bytesUploaded: {
		readOnly: true,
		value: 0
	    },
	    /**
	     * The type of the file wrapped by FileFlash. This value is provided by the Flash player
	     * uploader.
	     *
	     * @attribute type
	     * @type {String}
	     * @initOnly
	     */
	    type: {
		writeOnce: "initOnly",
		value: null
	    },
	    /**
	     * The instance of Y.SWF wrapping the Flash player uploader associated with this file.
	     *
	     * @attribute uploder
	     * @type {SWF}
	     * @initOnly
	     */
	    uploader: {
		writeOnce: "initOnly",
		value: null
	    }
	}
    });

    Y.FileFlash = FileFlash;
    /**
     * This module provides a UI for file selection and multiple file upload capability
     * using Flash as a transport engine.
     * @class UploaderFlash
     * @extends Widget
     * @param {Object} config Configuration object.
     * @constructor
     * @deprecated
     */

    function UploaderFlash() {
	UploaderFlash.superclass.constructor.apply(this, arguments);
    }



    Y.UploaderFlash = Y.extend(UploaderFlash, Y.Widget, {
	/**
	 * Stored value of the current button state (based on
	 * mouse events dispatched by the Flash player)
	 * @property _buttonState
	 * @type {String}
	 * @protected
	 */
	_buttonState: "up",
	/**
	 * Stored value of the current button focus state (based
	 * on keyboard and mouse events).
	 * @property _buttonFocus
	 * @type {Boolean}
	 * @protected
	 */
	_buttonFocus: false,
	/**
	 * Stored value of the unique id for the container that holds the
	 * Flash uploader.
	 *
	 * @property _swfContainerId
	 * @type {String}
	 * @protected
	 */
	_swfContainerId: null,
	/**
	 * Stored reference to the instance of SWF used to host the
	 * Flash uploader.
	 *
	 * @property _swfReference
	 * @type {SWF}
	 * @protected
	 */
	_swfReference: null,
	/**
	 * Stored reference to the instance of Uploader.Queue used to manage
	 * the upload process. This is a read-only property that only exists
	 * during an active upload process. Only one queue can be active at
	 * a time; if an upload start is attempted while a queue is active,
	 * it will be ignored.
	 *
	 * @property queue
	 * @type {Uploader.Queue}
	 */
	queue: null,
	/**
	 * Stored event bindings for keyboard navigation to and from the uploader.
	 *
	 * @property _tabElementBindings
	 * @type {Object}
	 * @protected
	 */
	_tabElementBindings: null,
	/**
	 * Construction logic executed during UploaderFlash instantiation.
	 *
	 * @method initializer
	 * @protected
	 */
	initializer: function() {

	    // Assign protected variable values
	    this._swfContainerId = Y.guid("uploader");
	    this._swfReference = null;
	    this.queue = null;
	    this._buttonState = "up";
	    this._buttonFocus = null;
	    this._tabElementBindings = null;
	    this._fileList = [];

	    // Publish available events

	    /**
	     * Signals that files have been selected.
	     *
	     * @event fileselect
	     * @param event {Event} The event object for the `fileselect` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>fileList</dt>
	     *          <dd>An `Array` of files selected by the user, encapsulated
	     *              in Y.FileFlash objects.</dd>
	     *  </dl>
	     */
	    this.publish("fileselect");

	    /**
	     * Signals that an upload of multiple files has been started.
	     *
	     * @event uploadstart
	     * @param event {Event} The event object for the `uploadstart`.
	     */
	    this.publish("uploadstart");

	    /**
	     * Signals that an upload of a specific file has started.
	     *
	     * @event fileuploadstart
	     * @param event {Event} The event object for the `fileuploadstart` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>file</dt>
	     *          <dd>A reference to the Y.File that dispatched the event.</dd>
	     *      <dt>originEvent</dt>
	     *          <dd>The original event dispatched by Y.File.</dd>
	     *  </dl>
	     */
	    this.publish("fileuploadstart");

	    /**
	     * Reports on upload progress of a specific file.
	     *
	     * @event uploadprogress
	     * @param event {Event} The event object for the `uploadprogress` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>bytesLoaded</dt>
	     *          <dd>The number of bytes of the file that has been uploaded</dd>
	     *      <dt>bytesTotal</dt>
	     *          <dd>The total number of bytes in the file</dd>
	     *      <dt>percentLoaded</dt>
	     *          <dd>The fraction of the file that has been uploaded, out of 100</dd>
	     *      <dt>originEvent</dt>
	     *          <dd>The original event dispatched by the SWF uploader</dd>
	     *  </dl>
	     */
	    this.publish("uploadprogress");

	    /**
	     * Reports on the total upload progress of the file list.
	     *
	     * @event totaluploadprogress
	     * @param event {Event} The event object for the `totaluploadprogress` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>bytesLoaded</dt>
	     *          <dd>The number of bytes of the file list that has been uploaded</dd>
	     *      <dt>bytesTotal</dt>
	     *          <dd>The total number of bytes in the file list</dd>
	     *      <dt>percentLoaded</dt>
	     *          <dd>The fraction of the file list that has been uploaded, out of 100</dd>
	     *  </dl>
	     */
	    this.publish("totaluploadprogress");

	    /**
	     * Signals that a single file upload has been completed.
	     *
	     * @event uploadcomplete
	     * @param event {Event} The event object for the `uploadcomplete` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>file</dt>
	     *          <dd>The pointer to the instance of `Y.File` whose upload has been completed.</dd>
	     *      <dt>originEvent</dt>
	     *          <dd>The original event fired by the SWF Uploader</dd>
	     *      <dt>data</dt>
	     *          <dd>Data returned by the server.</dd>
	     *  </dl>
	     */
	    this.publish("uploadcomplete");

	    /**
	     * Signals that the upload process of the entire file list has been completed.
	     *
	     * @event alluploadscomplete
	     * @param event {Event} The event object for the `alluploadscomplete`.
	     */
	    this.publish("alluploadscomplete");

	    /**
	     * Signals that a error has occurred in a specific file's upload process.
	     *
	     * @event uploaderror
	     * @param event {Event} The event object for the `uploaderror` with the
	     *                      following payload:
	     *  <dl>
	     *      <dt>originEvent</dt>
	     *          <dd>The original error event fired by the SWF Uploader. </dd>
	     *      <dt>file</dt>
	     *          <dd>The pointer at the instance of Y.FileFlash that returned the error.</dd>
	     *      <dt>source</dt>
	     *          <dd>The source of the upload error, either "io" or "http"</dd>
	     *      <dt>message</dt>
	     *          <dd>The message that accompanied the error. Corresponds to the text of
	     *              the error in cases where source is "io", and to the HTTP status for
	     cases where source is "http".</dd>
	     *  </dl>
	     */
	    this.publish("uploaderror");

	    /**
	     * Signals that a mouse has begun hovering over the `Select Files` button.
	     *
	     * @event mouseenter
	     * @param event {Event} The event object for the `mouseenter` event.
	     */
	    this.publish("mouseenter");

	    /**
	     * Signals that a mouse has stopped hovering over the `Select Files` button.
	     *
	     * @event mouseleave
	     * @param event {Event} The event object for the `mouseleave` event.
	     */
	    this.publish("mouseleave");

	    /**
	     * Signals that a mouse button has been pressed over the `Select Files` button.
	     *
	     * @event mousedown
	     * @param event {Event} The event object for the `mousedown` event.
	     */
	    this.publish("mousedown");

	    /**
	     * Signals that a mouse button has been released over the `Select Files` button.
	     *
	     * @event mouseup
	     * @param event {Event} The event object for the `mouseup` event.
	     */
	    this.publish("mouseup");

	    /**
	     * Signals that a mouse has been clicked over the `Select Files` button.
	     *
	     * @event click
	     * @param event {Event} The event object for the `click` event.
	     */
	    this.publish("click");
	},
	/**
	 * Creates the DOM structure for the UploaderFlash.
	 * UploaderFlash's DOM structure consists of two layers: the base "Select Files"
	 * button that can be replaced by the developer's widget of choice; and a transparent
	 * Flash overlay positoned above the button that captures all input events.
	 * The `position` style attribute of the `boundingBox` of the `Uploader` widget
	 * is forced to be `relative`, in order to accommodate the Flash player overlay
	 * (which is `position`ed `absolute`ly).
	 *
	 * @method renderUI
	 * @protected
	 */
	renderUI: function() {
	    var boundingBox = this.get("boundingBox"),
		    contentBox = this.get('contentBox'),
		    selFilesButton = this.get("selectFilesButton"),
		    flashContainer = Y.Node.create(substitute(UploaderFlash.FLASH_CONTAINER, {
			swfContainerId: this._swfContainerId
		    })),
		    params = {
			version: "10.0.45",
			fixedAttributes: {
			    wmode: "transparent",
			    allowScriptAccess: "always",
			    allowNetworking: "all",
			    scale: "noscale"
			}
		    };

	    boundingBox.setStyle("position", "relative");
	    selFilesButton.setStyles({width: "100%", height: "100%"});
	    contentBox.append(selFilesButton);
	    contentBox.append(flashContainer);

	    this._swfReference = new Y.SWF(flashContainer, this.get("swfURL"), params);
	},
	/**
	 * Binds handlers to the UploaderFlash UI events and propagates attribute
	 * values to the Flash player.
	 * The propagation of initial values is set to occur once the Flash player
	 * instance is ready (as indicated by the `swfReady` event.)
	 *
	 * @method bindUI
	 * @protected
	 */
	bindUI: function() {

	    this._swfReference.on("swfReady", function() {
		this._setMultipleFiles();
		this._setFileFilters();
		this._triggerEnabled();
		this._attachTabElements();
		this.after("multipleFilesChange", this._setMultipleFiles, this);
		this.after("fileFiltersChange", this._setFileFilters, this);
		this.after("enabledChange", this._triggerEnabled, this);
		this.after("tabElementsChange", this._attachTabElements);
	    }, this);

	    this._swfReference.on("fileselect", this._updateFileList, this);



	    // this._swfReference.on("trace", function (ev) {console.log(ev.message);});

	    this._swfReference.on("mouseenter", function() {
		this.fire("mouseenter");
		this._setButtonClass("hover", true);
		if (this._buttonState === "down") {
		    this._setButtonClass("active", true);
		}
	    }, this);

	    this._swfReference.on("mouseleave", function() {
		this.fire("mouseleave");
		this._setButtonClass("hover", false);
		this._setButtonClass("active", false);
	    }, this);

	    this._swfReference.on("mousedown", function() {
		this.fire("mousedown");
		this._buttonState = "down";
		this._setButtonClass("active", true);
	    }, this);

	    this._swfReference.on("mouseup", function() {
		this.fire("mouseup");
		this._buttonState = "up";
		this._setButtonClass("active", false);
	    }, this);

	    this._swfReference.on("click", function() {
		this.fire("click");
		this._buttonFocus = true;
		this._setButtonClass("focus", true);
		Y.one("body").focus();
		this._swfReference._swf.focus();
	    }, this);
	},
	/**
	 * Attaches keyboard bindings to enabling tabbing to and from the instance of the Flash
	 * player in the Uploader widget. If the previous and next elements are specified, the
	 * keyboard bindings enable the user to tab from the `tabElements["from"]` node to the
	 * Flash-powered "Select Files" button, and to the `tabElements["to"]` node.
	 *
	 * @method _attachTabElements
	 * @protected
	 * @param ev {Event} Optional event payload if called as a `tabElementsChange` handler.
	 */
	_attachTabElements: function() {
	    if (this.get("tabElements") !== null && this.get("tabElements").from !== null && this.get("tabElements").to !== null) {

		if (this._tabElementBindings !== null) {
		    this._tabElementBindings.from.detach();
		    this._tabElementBindings.to.detach();
		    this._tabElementBindings.tabback.detach();
		    this._tabElementBindings.tabforward.detach();
		    this._tabElementBindings.focus.detach();
		    this._tabElementBindings.blur.detach();
		}
		else {
		    this._tabElementBindings = {};
		}

		var fromElement = Y.one(this.get("tabElements").from),
			toElement = Y.one(this.get("tabElements").to);


		this._tabElementBindings.from = fromElement.on("keydown", function(ev) {
		    if (ev.keyCode === 9 && !ev.shiftKey) {
			ev.preventDefault();
			this._swfReference._swf.setAttribute("tabindex", 0);
			this._swfReference._swf.setAttribute("role", "button");
			this._swfReference._swf.setAttribute("aria-label", this.get("selectButtonLabel"));
			this._swfReference._swf.focus();
		    }
		}, this);

		this._tabElementBindings.to = toElement.on("keydown", function(ev) {
		    if (ev.keyCode === 9 && ev.shiftKey) {
			ev.preventDefault();
			this._swfReference._swf.setAttribute("tabindex", 0);
			this._swfReference._swf.setAttribute("role", "button");
			this._swfReference._swf.setAttribute("aria-label", this.get("selectButtonLabel"));
			this._swfReference._swf.focus();
		    }
		}, this);

		this._tabElementBindings.tabback = this._swfReference.on("tabback", function() {
		    this._swfReference._swf.blur();
		    setTimeout(function() {
			fromElement.focus();
		    }, 30);
		}, this);

		this._tabElementBindings.tabforward = this._swfReference.on("tabforward", function() {
		    this._swfReference._swf.blur();
		    setTimeout(function() {
			toElement.focus();
		    }, 30);
		}, this);

		this._tabElementBindings.focus = this._swfReference._swf.on("focus", function() {
		    this._buttonFocus = true;
		    this._setButtonClass("focus", true);
		}, this);

		this._tabElementBindings.blur = this._swfReference._swf.on("blur", function() {
		    this._buttonFocus = false;
		    this._setButtonClass("focus", false);
		}, this);
	    }
	    else if (this._tabElementBindings !== null) {
		this._tabElementBindings.from.detach();
		this._tabElementBindings.to.detach();
		this._tabElementBindings.tabback.detach();
		this._tabElementBindings.tabforward.detach();
		this._tabElementBindings.focus.detach();
		this._tabElementBindings.blur.detach();
	    }
	},
	/**
	 * Adds or removes a specified state CSS class to the underlying uploader button.
	 *
	 * @method _setButtonClass
	 * @protected
	 * @param state {String} The name of the state enumerated in `buttonClassNames` attribute
	 * from which to derive the needed class name.
	 * @param add {Boolean} A Boolean indicating whether to add or remove the class.
	 */
	_setButtonClass: function(state, add) {
	    if (add) {
		this.get("selectFilesButton").addClass(this.get("buttonClassNames")[state]);
	    }
	    else {
		this.get("selectFilesButton").removeClass(this.get("buttonClassNames")[state]);
	    }
	},
	/**
	 * Syncs the state of the `fileFilters` attribute between the instance of UploaderFlash
	 * and the Flash player.
	 *
	 * @method _setFileFilters
	 * @private
	 */
	_setFileFilters: function() {
	    if (this._swfReference && this.get("fileFilters").length > 0) {
		this._swfReference.callSWF("setFileFilters", [this.get("fileFilters")]);
	    }
	},
	/**
	 * Syncs the state of the `multipleFiles` attribute between this class
	 * and the Flash uploader.
	 *
	 * @method _setMultipleFiles
	 * @private
	 */
	_setMultipleFiles: function() {
	    if (this._swfReference) {
		this._swfReference.callSWF("setAllowMultipleFiles", [this.get("multipleFiles")]);
	    }
	},
	/**
	 * Syncs the state of the `enabled` attribute between this class
	 * and the Flash uploader.
	 *
	 * @method _triggerEnabled
	 * @private
	 */
	_triggerEnabled: function() {
	    if (this.get("enabled")) {
		this._swfReference.callSWF("enable");
		this._swfReference._swf.setAttribute("aria-disabled", "false");
		this._setButtonClass("disabled", false);
	    }
	    else {
		this._swfReference.callSWF("disable");
		this._swfReference._swf.setAttribute("aria-disabled", "true");
		this._setButtonClass("disabled", true);
	    }
	},
	/**
	 * Getter for the `fileList` attribute
	 *
	 * @method _getFileList
	 * @private
	 */
	_getFileList: function() {
	    return this._fileList.concat();
	},
	/**
	 * Setter for the `fileList` attribute
	 *
	 * @method _setFileList
	 * @private
	 */
	_setFileList: function(val) {
	    this._fileList = val.concat();
	    return this._fileList.concat();
	},
	/**
	 * Adjusts the content of the `fileList` based on the results of file selection
	 * and the `appendNewFiles` attribute. If the `appendNewFiles` attribute is true,
	 * then selected files are appended to the existing list; otherwise, the list is
	 * cleared and populated with the newly selected files.
	 *
	 * @method _updateFileList
	 * @param ev {Event} The file selection event received from the uploader.
	 * @private
	 */
	_updateFileList: function(ev) {

	    Y.one("body").focus();
	    this._swfReference._swf.focus();


	    var newfiles = ev.fileList,
		    fileConfObjects = [],
		    parsedFiles = [],
		    swfRef = this._swfReference,
		    filterFunc = this.get("fileFilterFunction"),
		    oldfiles;

	    Y.each(newfiles, function(value) {
		var newFileConf = {};
		newFileConf.id = value.fileId;
		newFileConf.name = value.fileReference.name;
		newFileConf.size = value.fileReference.size;
		newFileConf.type = value.fileReference.type;
		newFileConf.dateCreated = value.fileReference.creationDate;
		newFileConf.dateModified = value.fileReference.modificationDate;
		newFileConf.uploader = swfRef;

		fileConfObjects.push(newFileConf);
	    });

	    if (filterFunc) {
		Y.each(fileConfObjects, function(value) {
		    var newfile = new Y.FileFlash(value);
		    if (filterFunc(newfile)) {
			parsedFiles.push(newfile);
		    }
		});
	    }
	    else {
		Y.each(fileConfObjects, function(value) {
		    parsedFiles.push(new Y.FileFlash(value));
		});
	    }

	    if (parsedFiles.length > 0) {
		oldfiles = this.get("fileList");

		this.set("fileList",
			this.get("appendNewFiles") ? oldfiles.concat(parsedFiles) : parsedFiles);

		this.fire("fileselect", {fileList: parsedFiles});
	    }

	},
	/**
	 * Handles and retransmits events fired by `Y.FileFlash` and `Y.Uploader.Queue`.
	 *
	 * @method _uploadEventHandler
	 * @param event The event dispatched during the upload process.
	 * @private
	 */
	_uploadEventHandler: function(event) {
	    switch (event.type) {
		case "file:uploadstart":
		    this.fire("fileuploadstart", event);
		    break;
		case "file:uploadprogress":
		    this.fire("uploadprogress", event);
		    break;
		case "uploaderqueue:totaluploadprogress":
		    this.fire("totaluploadprogress", event);
		    break;
		case "file:uploadcomplete":
		    this.fire("uploadcomplete", event);
		    break;
		case "uploaderqueue:alluploadscomplete":
		    this.queue = null;
		    this.fire("alluploadscomplete", event);
		    break;
		case "file:uploaderror": //overflow intentional
		case "uploaderqueue:uploaderror":
		    this.fire("uploaderror", event);
		    break;
		case "file:uploadcancel": // overflow intentional
		case "uploaderqueue:uploadcancel":
		    this.fire("uploadcancel", event);
		    break;
	    }

	},
	/**
	 * Starts the upload of a specific file.
	 *
	 * @method upload
	 * @param file {FileFlash} Reference to the instance of the file to be uploaded.
	 * @param url {String} The URL to upload the file to.
	 * @param [postVars] {Object} A set of key-value pairs to send as variables along with the file upload HTTP request.
	 *                          If not specified, the values from the attribute `postVarsPerFile` are used instead.
	 */
	upload: function(file, url, postvarsArg) {

	    var uploadURL = url || this.get("uploadURL"),
		    postVars = postvarsArg || this.get("postVarsPerFile"),
		    fileId = file.get("id");

	    postVars = postVars.hasOwnProperty(fileId) ? postVars[fileId] : postVars;
	    if (file instanceof Y.FileFlash) {

		file.on("uploadstart", this._uploadEventHandler, this);
		file.on("uploadprogress", this._uploadEventHandler, this);
		file.on("uploadcomplete", this._uploadEventHandler, this);
		// file.on("uploadcomplete", function(){alert(1213);}, this);
		file.on("uploaderror", this._uploadEventHandler, this);
		file.on("uploadcancel", this._uploadEventHandler, this);

		file.startUpload(uploadURL, postVars, this.get("fileFieldName"));
	    }
	},
	/**
	 * Starts the upload of all files on the file list, using an automated queue.
	 *
	 * @method uploadAll
	 * @param url {String} The URL to upload the files to.
	 * @param [postVars] {Object} A set of key-value pairs to send as variables along with the file upload HTTP request.
	 *                          If not specified, the values from the attribute `postVarsPerFile` are used instead.
	 */
	uploadAll: function(url, postvars) {
	    this.uploadThese(this.get("fileList"), url, postvars);
	},
	/**
	 * Starts the upload of the files specified in the first argument, using an automated queue.
	 *
	 * @method uploadThese
	 * @param files {Array} The list of files to upload.
	 * @param url {String} The URL to upload the files to.
	 * @param [postVars] {Object} A set of key-value pairs to send as variables along with the file upload HTTP request.
	 *                          If not specified, the values from the attribute `postVarsPerFile` are used instead.
	 */
	uploadThese: function(files, url, postvars) {
	    if (!this.queue) {
		var uploadURL = url || this.get("uploadURL"),
			postVars = postvars || this.get("postVarsPerFile");

		this.queue = new UploaderQueue({
		    simUploads: this.get("simLimit"),
		    errorAction: this.get("errorAction"),
		    fileFieldName: this.get("fileFieldName"),
		    fileList: files,
		    uploadURL: uploadURL,
		    perFileParameters: postVars,
		    retryCount: this.get("retryCount")
		});

		this.queue.on("uploadstart", this._uploadEventHandler, this);
		this.queue.on("uploadprogress", this._uploadEventHandler, this);
		this.queue.on("totaluploadprogress", this._uploadEventHandler, this);
		this.queue.on("uploadcomplete", this._uploadEventHandler, this);
		this.queue.on("alluploadscomplete", this._uploadEventHandler, this);
		this.queue.on("alluploadscancelled", function() {
		    this.queue = null;
		}, this);
		this.queue.on("uploaderror", this._uploadEventHandler, this);
		this.queue.startUpload();

		this.fire("uploadstart");
	    }
	}
    },
    {
	/**
	 * The template for the Flash player container. Since the Flash player container needs
	 * to completely overlay the &lquot;Select Files&rqot; control, it's positioned absolutely,
	 * with width and height set to 100% of the parent.
	 *
	 * @property FLASH_CONTAINER
	 * @type {String}
	 * @static
	 * @default '<div id="{swfContainerId}" style="position:absolute; top:0px; left: 0px; margin: 0; padding: 0;
	 *           border: 0; width:100%; height:100%"></div>'
	 */
	FLASH_CONTAINER: '<div id="{swfContainerId}" style="position:absolute; top:0px; left: 0px; margin: 0; ' +
		'padding: 0; border: 0; width:100%; height:100%"></div>',
	/**
	 * The template for the "Select Files" button.
	 *
	 * @property SELECT_FILES_BUTTON
	 * @type {String}
	 * @static
	 * @default "<button type='button' class='yui3-button' tabindex='-1'>{selectButtonLabel}</button>"
	 */
	SELECT_FILES_BUTTON: "<button type='button' class='yui3-button' tabindex='-1'>{selectButtonLabel}</button>",
	/**
	 * The static property reflecting the type of uploader that `Y.Uploader`
	 * aliases. The UploaderFlash value is `"flash"`.
	 *
	 * @property TYPE
	 * @type {String}
	 * @static
	 */
	TYPE: "flash",
	/**
	 * The identity of the widget.
	 *
	 * @property NAME
	 * @type String
	 * @default 'uploader'
	 * @readOnly
	 * @protected
	 * @static
	 */
	NAME: "uploader",
	/**
	 * Static property used to define the default attribute configuration of
	 * the Widget.
	 *
	 * @property ATTRS
	 * @type {Object}
	 * @protected
	 * @static
	 */
	ATTRS: {
	    /**
	     * A Boolean indicating whether newly selected files should be appended
	     * to the existing file list, or whether they should replace it.
	     *
	     * @attribute appendNewFiles
	     * @type {Boolean}
	     * @default true
	     */
	    appendNewFiles: {
		value: true
	    },
	    /**
	     * The names of CSS classes that correspond to different button states
	     * of the "Select Files" control. These classes are assigned to the
	     * "Select Files" control based on the mouse states reported by the
	     * Flash player. The keys for the class names are:
	     * <ul>
	     *   <li> <strong>`hover`</strong>: the class corresponding to mouse hovering over
	     *      the "Select Files" button.</li>
	     *   <li> <strong>`active`</strong>: the class corresponding to mouse down state of
	     *      the "Select Files" button.</li>
	     *   <li> <strong>`disabled`</strong>: the class corresponding to the disabled state
	     *      of the "Select Files" button.</li>
	     *   <li> <strong>`focus`</strong>: the class corresponding to the focused state of
	     *      the "Select Files" button.</li>
	     * </ul>
	     * @attribute buttonClassNames
	     * @type {Object}
	     * @default { hover: "yui3-button-hover",
	     *            active: "yui3-button-active",
	     *            disabled: "yui3-button-disabled",
	     *            focus: "yui3-button-selected"
	     *          }
	     */
	    buttonClassNames: {
		value: {
		    "hover": "yui3-button-hover",
		    "active": "yui3-button-active",
		    "disabled": "yui3-button-disabled",
		    "focus": "yui3-button-selected"
		}
	    },
	    /**
	     * A Boolean indicating whether the uploader is enabled or disabled for user input.
	     *
	     * @attribute enabled
	     * @type {Boolean}
	     * @default true
	     */
	    enabled: {
		value: true
	    },
	    /**
	     * The action  performed when an upload error occurs for a specific file being uploaded.
	     * The possible values are:
	     * <ul>
	     *   <li> <strong>`UploaderQueue.CONTINUE`</strong>: the error is ignored and the upload process is continued.</li>
	     *   <li> <strong>`UploaderQueue.STOP`</strong>: the upload process is stopped as soon as any other parallel file
	     *     uploads are finished.</li>
	     *   <li> <strong>`UploaderQueue.RESTART_ASAP`</strong>: the file is added back to the front of the queue.</li>
	     *   <li> <strong>`UploaderQueue.RESTART_AFTER`</strong>: the file is added to the back of the queue.</li>
	     * </ul>
	     * @attribute errorAction
	     * @type {String}
	     * @default UploaderQueue.CONTINUE
	     */
	    errorAction: {
		value: "continue",
		validator: function(val) {
		    return (
			    val === UploaderQueue.CONTINUE ||
			    val === UploaderQueue.STOP ||
			    val === UploaderQueue.RESTART_ASAP ||
			    val === UploaderQueue.RESTART_AFTER
			    );
		}
	    },
	    /**
	     * An array indicating what fileFilters should be applied to the file
	     * selection dialog. Each element in the array should be an object with
	     * the following key-value pairs:
	     * {
	     *   description : String
	     extensions: String of the form &lquot;*.ext1;*.ext2;*.ext3;...&rquot;
	     * }
	     * @attribute fileFilters
	     * @type {Array}
	     * @default []
	     */
	    fileFilters: {
		value: []
	    },
	    /**
	     * A filtering function that is applied to every file selected by the user.
	     * The function receives the `Y.File` object and must return a Boolean value.
	     * If a `false` value is returned, the file in question is not added to the
	     * list of files to be uploaded.
	     * Use this function to put limits on file sizes or check the file names for
	     * correct extension, but make sure that a server-side check is also performed,
	     * since any client-side restrictions are only advisory and can be circumvented.
	     *
	     * @attribute fileFilterFunction
	     * @type {Function}
	     * @default null
	     */
	    fileFilterFunction: {
		value: null
	    },
	    /**
	     * A String specifying what should be the POST field name for the file
	     * content in the upload request.
	     *
	     * @attribute fileFieldName
	     * @type {String}
	     * @default Filedata
	     */
	    fileFieldName: {
		value: "Filedata"
	    },
	    /**
	     * The array of files to be uploaded. All elements in the array
	     * must be instances of `Y.FileFlash` and be instantiated with a `fileId`
	     * retrieved from an instance of the uploader.
	     *
	     * @attribute fileList
	     * @type {Array}
	     * @default []
	     */
	    fileList: {
		value: [],
		getter: "_getFileList",
		setter: "_setFileList"
	    },
	    /**
	     * A Boolean indicating whether multiple file selection is enabled.
	     *
	     * @attribute multipleFiles
	     * @type {Boolean}
	     * @default false
	     */
	    multipleFiles: {
		value: false
	    },
	    /**
	     * An object, keyed by `fileId`, containing sets of key-value pairs
	     * that should be passed as POST variables along with each corresponding
	     * file. This attribute is only used if no POST variables are specifed
	     * in the upload method call.
	     *
	     * @attribute postVarsPerFile
	     * @type {Object}
	     * @default {}
	     */
	    postVarsPerFile: {
		value: {}
	    },
	    /**
	     * The label for the "Select Files" widget. This is the value that replaces the
	     * `{selectButtonLabel}` token in the `SELECT_FILES_BUTTON` template.
	     *
	     * @attribute selectButtonLabel
	     * @type {String}
	     * @default "Select Files"
	     */
	    selectButtonLabel: {
		value: "Select Files"
	    },
	    /**
	     * The widget that serves as the "Select Files" control for the file uploader
	     *
	     *
	     * @attribute selectFilesButton
	     * @type {Node | Widget}
	     * @default A standard HTML button with YUI CSS Button skin.
	     */
	    selectFilesButton: {
		valueFn: function() {
		    return Y.Node.create(substitute(Y.UploaderFlash.SELECT_FILES_BUTTON, {selectButtonLabel: this.get("selectButtonLabel")}));
		}
	    },
	    /**
	     * The number of files that can be uploaded
	     * simultaneously if the automatic queue management
	     * is used. This value can be in the range between 2
	     * and 5.
	     *
	     * @attribute simLimit
	     * @type {Number}
	     * @default 2
	     */
	    simLimit: {
		value: 2,
		validator: function(val) {
		    return (val >= 2 && val <= 5);
		}
	    },
	    /**
	     * The URL to the SWF file of the flash uploader. A copy local to
	     * the server that hosts the page on which the uploader appears is
	     * recommended.
	     *
	     * @attribute swfURL
	     * @type {String}
	     * @default "flashuploader.swf" with a
	     * random GET parameter for IE (to prevent buggy behavior when the SWF
	     * is cached).
	     */
	    swfURL: {
		valueFn: function() {
		    var prefix = "flashuploader.swf";

		    if (Y.UA.ie > 0) {
			return (prefix + "?t=" + Y.guid("uploader"));
		    }

		    return prefix;
		}
	    },
	    /**
	     * The id's or `Node` references of the DOM elements that precede
	     * and follow the `Select Files` button in the tab order. Specifying
	     * these allows keyboard navigation to and from the Flash player
	     * layer of the uploader.
	     * The two keys corresponding to the DOM elements are:
	     <ul>
	     *   <li> `from`: the id or the `Node` reference corresponding to the
	     *     DOM element that precedes the `Select Files` button in the tab order.</li>
	     *   <li> `to`: the id or the `Node` reference corresponding to the
	     *     DOM element that follows the `Select Files` button in the tab order.</li>
	     * </ul>
	     * @attribute tabElements
	     * @type {Object}
	     * @default null
	     */
	    tabElements: {
		value: null
	    },
	    /**
	     * The URL to which file upload requested are POSTed. Only used if a different url is not passed to the upload method call.
	     *
	     * @attribute uploadURL
	     * @type {String}
	     * @default ""
	     */
	    uploadURL: {
		value: ""
	    },
	    /**
	     * The number of times to try re-uploading a file that failed to upload before
	     * cancelling its upload.
	     *
	     * @attribute retryCount
	     * @type {Number}
	     * @default 3
	     */
	    retryCount: {
		value: 3
	    }
	}
    });

    Y.UploaderFlash.Queue = UploaderQueue;


}, '3.17.2', {
    "requires": [
	"swfdetect",
	"escape",
	"widget",
	"base",
	"cssbutton",
	"node",
	"event-custom",
	"uploader-queue"
    ]
});

YUI.add("uploader",function(e,t){var n=e.config.win;n&&n.File&&n.FormData&&n.XMLHttpRequest?e.Uploader=e.UploaderHTML5:e.SWFDetect.isFlashVersionAtLeast(10,0,45)?e.Uploader=e.UploaderFlash:(e.namespace("Uploader"),e.Uploader.TYPE="none")},"@VERSION@",{requires:["uploader-html5","uploader-flash"]});

YUI.add("autocomplete-base",function(e,t){function T(){}var n=e.Escape,r=e.Lang,i=e.Array,s=e.Object,o=r.isFunction,u=r.isString,a=r.trim,f=e.Attribute.INVALID_VALUE,l="_functionValidator",c="_sourceSuccess",h="allowBrowserAutocomplete",p="inputNode",d="query",v="queryDelimiter",m="requestTemplate",g="results",y="resultListLocator",b="value",w="valueChange",E="clear",S=d,x=g;T.prototype={initializer:function(){e.before(this._bindUIACBase,this,"bindUI"),e.before(this._syncUIACBase,this,"syncUI"),this.publish(E,{defaultFn:this._defClearFn}),this.publish(S,{defaultFn:this._defQueryFn}),this.publish(x,{defaultFn:this._defResultsFn})},destructor:function(){this._acBaseEvents&&this._acBaseEvents.detach(),delete this._acBaseEvents,delete this._cache,delete this._inputNode,delete this._rawSource},clearCache:function(){return this._cache&&(this._cache={}),this},sendRequest:function(t,n){var r,i=this.get("source");return t||t===""?this._set(d,t):t=this.get(d)||"",i&&(n||(n=this.get(m)),r=n?n.call(this,t):t,i.sendRequest({query:t,request:r,callback:{success:e.bind(this._onResponse,this,t)}})),this},_bindUIACBase:function(){var t=this.get(p),n=t&&t.tokenInput;n&&(t=n.get(p),this._set("tokenInput",n));if(!t){e.error("No inputNode specified.");return}this._inputNode=t,this._acBaseEvents=new e.EventHandle([t.on(w,this._onInputValueChange,this),t.on("blur",this._onInputBlur,this),this.after(h+"Change",this._syncBrowserAutocomplete),this.after("sourceTypeChange",this._afterSourceTypeChange),this.after(w,this._afterValueChange)])},_syncUIACBase:function(){this._syncBrowserAutocomplete(),this.set(b,this.get(p).get(b))},_createArraySource:function(e){var t=this;return{type:"array",sendRequest:function(n){t[c](e.concat(),n)}}},_createFunctionSource:function(e){var t=this;return{type:"function",sendRequest:function(n){function i(e){t[c](e||[],n)}var r;(r=e(n.query,i))&&i(r)}}},_createObjectSource:function(e){var t=this;return{type:"object",sendRequest:function(n){var r=n.query;t[c](s.owns(e,r)?e[r]:[],n)}}},_functionValidator:function(e){return e===null||o(e)},_getObjectValue:function(e,t){if(!e)return;for(var n=0,r=t.length;e&&n<r;n++)e=e[t[n]];return e},_parseResponse:function(e,t,r){var i={data:r,query:e,results:[]},s=this.get(y),o=[],u=t&&t.results,a,f,l,c,h,p,d,v,m,g,b;u&&s&&(u=s.call(this,u));if(u&&u.length){a=this.get("resultFilters"),b=this.get("resultTextLocator");for(p=0,d=u.length;p<d;++p)m=u[p],g=b?b.call(this,m):m.toString(),o.push({display:n.html(g),raw:m,text:g});for(p=0,d=a.length;p<d;++p){o=a[p].call(this,e,o.concat());if(!o)return;if(!o.length)break}if(o.length){l=this.get("resultFormatter"),h=this.get("resultHighlighter"),v=this.get("maxResults"),v&&v>0&&o.length>v&&(o.length=v);if(h){c=h.call(this,e,o.concat());if(!c)return;for(p=0,d=c.length;p<d;++p)m=o[p],m.highlighted=c[p],m.display=m.highlighted}if(l){f=l.call(this,e,o.concat());if(!f)return;for(p=0,d=f.length;p<d;++p)o[p].display=f[p]}}}i.results=o,this.fire(x,i)},_parseValue:function(e){var t=this.get(v);return t&&(e=e.split(t),e=e[e.length-1]),r.trimLeft(e)},_setEnableCache:function(e){this._cache=e?{}:null},_setLocator:function(e){if(this[l](e))return e;var t=this;return e=e.toString().split("."),function(n){return n&&t._getObjectValue(n,e)}},_setRequestTemplate:function(e){return this[l](e)?e:(e=e.toString(),function(t){return r.sub(e,{query:encodeURIComponent(t)})})},_setResultFilters:function(t){var n,s;return t===null?[]:(n=e.AutoCompleteFilters,s=function(e){return o(e)?e:u(e)&&n&&o(n[e])?n[e]:!1},r.isArray(t)?(t=i.map(t,s),i.every(t,function(e){return!!e})?t:f):(t=s(t),t?[t]:f))},_setResultHighlighter:function(t){var n;return this[l](t)?t:(n=e.AutoCompleteHighlighters,u(t)&&n&&o(n[t])?n[t]:f)},_setSource:function(t){var n=this.get("sourceType")||r.type(t),i;return t&&o(t.sendRequest)||t===null||n==="datasource"?(this._rawSource=t,t):(i=T.SOURCE_TYPES[n])?(this._rawSource=t,r.isString(i)?this[i](t):i(t)):(e.error("Unsupported source type '"+n+"'. Maybe autocomplete-sources isn't loaded?"),f)},_sourceSuccess:function(e,t){t.callback.success({data:e,response:{results:e}})},_syncBrowserAutocomplete:function(){var e=this.get(p);e.get("nodeName").toLowerCase()==="input"&&e.setAttribute("autocomplete",this.get(h)?"on":"off")},_updateValue:function(e){var t=this.get(v),n,s,o;e=r.trimLeft(e),t&&(n=a(t),o=i.map(a(this.get(b)).split(t),a),s=o.length,s>1&&(o[s-1]=e,e=o.join(n+" ")),e=e+n+" "),this.set(b,e)},_afterSourceTypeChange:function(e){this._rawSource&&this.set("source",this._rawSource)},_afterValueChange:function(e){var t=e.newVal,n=this,r=e.src===T.UI_SRC,i,s,o,u;r||n._inputNode.set(b,t),o=n.get("minQueryLength"),u=n._parseValue(t)||"",o>=0&&u.length>=o?r?(i=n.get("queryDelay"),s=function(){n.fire(S,{inputValue:t,query:u,src:e.src})},i?(clearTimeout(n._delay),n._delay=setTimeout(s,i)):s()):n._set(d,u):(clearTimeout(n._delay),n.fire(E,{prevVal:e.prevVal?n._parseValue(e.prevVal):null,src:e.src}))},_onInputBlur:function(e){var t=this.get(v),n,i,s;if(t&&!this.get("allowTrailingDelimiter")){t=r.trimRight(t),s=i=this._inputNode.get(b);if(t)while((i=r.trimRight(i))&&(n=i.length-t.length)&&i.lastIndexOf(t)===n)i=i.substring(0,n);else i=r.trimRight(i);i!==s&&this.set(b,i)}},_onInputValueChange:function(e){var t=e.newVal;t!==this.get(b)&&this.set(b,t,{src:T.UI_SRC})},_onResponse:function(e,t){e===(this.get(d)||"")&&this._parseResponse(e||"",t.response,t.data)},_defClearFn:function(){this._set(d,null),this._set(g,[])},_defQueryFn:function(e){this.sendRequest(e.query)},_defResultsFn:function(e){this._set(g,e[g])}},T.ATTRS={allowBrowserAutocomplete:{value:!1},allowTrailingDelimiter:{value:!1},enableCache:{lazyAdd:!1,setter:"_setEnableCache",value:!0},inputNode:{setter:e.one,writeOnce:"initOnly"},maxResults:{value:0},minQueryLength:{value:1},query:{readOnly:!0,value:null},queryDelay:{value:100},queryDelimiter:{value:null},requestTemplate:{setter:"_setRequestTemplate",value:null},resultFilters:{setter:"_setResultFilters",value:[]},resultFormatter
:{validator:l,value:null},resultHighlighter:{setter:"_setResultHighlighter",value:null},resultListLocator:{setter:"_setLocator",value:null},results:{readOnly:!0,value:[]},resultTextLocator:{setter:"_setLocator",value:null},source:{setter:"_setSource",value:null},sourceType:{value:null},tokenInput:{readOnly:!0},value:{value:""}},T._buildCfg={aggregates:["SOURCE_TYPES"],statics:["UI_SRC"]},T.SOURCE_TYPES={array:"_createArraySource","function":"_createFunctionSource",object:"_createObjectSource"},T.UI_SRC=e.Widget&&e.Widget.UI_SRC||"ui",e.AutoCompleteBase=T},"@VERSION@",{optional:["autocomplete-sources"],requires:["array-extras","base-build","escape","event-valuechange","node-base"]});

YUI.add("autocomplete-sources",function(e,t){var n=e.AutoCompleteBase,r=e.Lang,i="_sourceSuccess",s="maxResults",o="requestTemplate",u="resultListLocator";e.mix(n.prototype,{_YQL_SOURCE_REGEX:/^(?:select|set|use)\s+/i,_beforeCreateObjectSource:function(t){return t instanceof e.Node&&t.get("nodeName").toLowerCase()==="select"?this._createSelectSource(t):e.JSONPRequest&&t instanceof e.JSONPRequest?this._createJSONPSource(t):this._createObjectSource(t)},_createIOSource:function(t){function a(n){var o=n.request;if(r._cache&&o in r._cache){r[i](r._cache[o],n);return}s&&s.isInProgress()&&s.abort(),s=e.io(r._getXHRUrl(t,n),{on:{success:function(t,s){var u;try{u=e.JSON.parse(s.responseText)}catch(a){e.error("JSON parse error",a)}u&&(r._cache&&(r._cache[o]=u),r[i](u,n))}}})}var n={type:"io"},r=this,s,o,u;return n.sendRequest=function(t){o=t;if(u)return;u=!0,e.use("io-base","json-parse",function(){n.sendRequest=a,a(o)})},n},_createJSONPSource:function(t){function u(e){var n=e.request,s=e.query;if(r._cache&&n in r._cache){r[i](r._cache[n],e);return}t._config.on.success=function(t){r._cache&&(r._cache[n]=t),r[i](t,e)},t.send(s)}var n={type:"jsonp"},r=this,s,o;return n.sendRequest=function(i){s=i;if(o)return;o=!0,e.use("jsonp",function(){t instanceof e.JSONPRequest||(t=new e.JSONPRequest(t,{format:e.bind(r._jsonpFormatter,r)})),n.sendRequest=u,u(s)})},n},_createSelectSource:function(e){var t=this;return{type:"select",sendRequest:function(n){var r=[];e.get("options").each(function(e){r.push({html:e.get("innerHTML"),index:e.get("index"),node:e,selected:e.get("selected"),text:e.get("text"),value:e.get("value")})}),t[i](r,n)}}},_createStringSource:function(e){return this._YQL_SOURCE_REGEX.test(e)?this._createYQLSource(e):e.indexOf("{callback}")!==-1?this._createJSONPSource(e):this._createIOSource(e)},_createYQLSource:function(t){function c(o){var u=o.query,a=n.get("yqlEnv"),f=n.get(s),c,h,p;p=r.sub(t,{maxResults:f>0?f:1e3,request:o.request,query:u});if(n._cache&&p in n._cache){n[i](n._cache[p],o);return}c=function(e){n._cache&&(n._cache[p]=e),n[i](e,o)},h={proto:n.get("yqlProtocol")},l?(l._callback=c,l._opts=h,l._params.q=p,a&&(l._params.env=a)):l=new e.YQLRequest(p,{on:{success:c},allowCache:!1},a?{env:a}:null,h),l.send()}var n=this,o={type:"yql"},a,f,l;return n.get(u)||n.set(u,n._defaultYQLLocator),o.sendRequest=function(t){a=t,f||(f=!0,e.use("yql",function(){o.sendRequest=c,c(a)}))},o},_defaultYQLLocator:function(t){var n=t&&t.query&&t.query.results,i;return n&&r.isObject(n)?(i=e.Object.values(n)||[],n=i.length===1?i[0]:i,r.isArray(n)||(n=[n])):n=[],n},_getXHRUrl:function(e,t){var n=this.get(s);return t.query!==t.request&&(e+=t.request),r.sub(e,{maxResults:n>0?n:1e3,query:encodeURIComponent(t.query)})},_jsonpFormatter:function(e,t,n){var i=this.get(s),u=this.get(o);return u&&(e+=u(n)),r.sub(e,{callback:t,maxResults:i>0?i:1e3,query:encodeURIComponent(n)})}}),e.mix(n.ATTRS,{yqlEnv:{value:null},yqlProtocol:{value:"http"}}),e.mix(n.SOURCE_TYPES,{io:"_createIOSource",jsonp:"_createJSONPSource",object:"_beforeCreateObjectSource",select:"_createSelectSource",string:"_createStringSource",yql:"_createYQLSource"},!0)},"@VERSION@",{optional:["io-base","json-parse","jsonp","yql"],requires:["autocomplete-base"]});

YUI.add("lang/autocomplete-list_en",function(e){e.Intl.add("autocomplete-list","en",{item_selected:"{item} selected.",items_available:"Suggestions are available. Use up and down arrows to select."})},"@VERSION@");

YUI.add("event-resize",function(e,t){e.Event.define("windowresize",{on:e.UA.gecko&&e.UA.gecko<1.91?function(t,n,r){n._handle=e.Event.attach("resize",function(e){r.fire(e)})}:function(t,n,r){var i=e.config.windowResizeDelay||100;n._handle=e.Event.attach("resize",function(t){n._timer&&n._timer.cancel(),n._timer=e.later(i,e,function(){r.fire(t)})})},detach:function(e,t){t._timer&&t._timer.cancel(),t._handle.detach()}})},"@VERSION@",{requires:["node-base","event-synthetic"]});

YUI.add("selector-css2",function(e,t){var n="parentNode",r="tagName",i="attributes",s="combinator",o="pseudos",u=e.Selector,a={_reRegExpTokens:/([\^\$\?\[\]\*\+\-\.\(\)\|\\])/,SORT_RESULTS:!0,_isXML:function(){var t=e.config.doc.createElement("div").tagName!=="DIV";return t}(),shorthand:{"\\#(-?[_a-z0-9]+[-\\w\\uE000]*)":"[id=$1]","\\.(-?[_a-z]+[-\\w\\uE000]*)":"[className~=$1]"},operators:{"":function(t,n){return e.DOM.getAttribute(t,n)!==""},"~=":"(?:^|\\s+){val}(?:\\s+|$)","|=":"^{val}-?"},pseudos:{"first-child":function(t){return e.DOM._children(t[n])[0]===t}},_bruteQuery:function(t,n,r){var i=[],s=[],o,a=u._tokenize(t),f=a[a.length-1],l=e.DOM._getDoc(n),c,h,p,d,v;if(f){h=f.id,p=f.className,d=f.tagName||"*";if(n.getElementsByTagName)h&&(n.all||n.nodeType===9||e.DOM.inDoc(n))?s=e.DOM.allById(h,n):p?s=n.getElementsByClassName(p):s=n.getElementsByTagName(d);else{o=[],c=n.firstChild,v=d==="*";while(c){while(c)c.tagName>"@"&&(v||c.tagName===d)&&s.push(c),o.push(c),c=c.firstChild;while(o.length>0&&!c)c=o.pop().nextSibling}}s.length&&(i=u._filterNodes(s,a,r))}return i},_filterNodes:function(t,n,r){var i=0,s,o=n.length,a=o-1,f=[],l=t[0],c=l,h=e.Selector.getters,p,d,v,m,g,y,b,w;for(i=0;c=l=t[i++];){a=o-1,m=null;e:while(c&&c.tagName){v=n[a],b=v.tests,s=b.length;if(s&&!g)while(w=b[--s]){p=w[1],h[w[0]]?y=h[w[0]](c,w[0]):(y=c[w[0]],w[0]==="tagName"&&!u._isXML&&(y=y.toUpperCase()),typeof y!="string"&&y!==undefined&&y.toString?y=y.toString():y===undefined&&c.getAttribute&&(y=c.getAttribute(w[0],2)));if(p==="="&&y!==w[2]||typeof p!="string"&&p.test&&!p.test(y)||!p.test&&typeof p=="function"&&!p(c,w[0],w[2])){if(c=c[m])while(c&&(!c.tagName||v.tagName&&v.tagName!==c.tagName))c=c[m];continue e}}a--;if(!!g||!(d=v.combinator)){f.push(l);if(r)return f;break}m=d.axis,c=c[m];while(c&&!c.tagName)c=c[m];d.direct&&(m=null)}}return l=c=null,f},combinators:{" ":{axis:"parentNode"},">":{axis:"parentNode",direct:!0},"+":{axis:"previousSibling",direct:!0}},_parsers:[{name:i,re:/^\uE003(-?[a-z]+[\w\-]*)+([~\|\^\$\*!=]=?)?['"]?([^\uE004'"]*)['"]?\uE004/i,fn:function(t,n){var r=t[2]||"",i=u.operators,s=t[3]?t[3].replace(/\\/g,""):"",o;if(t[1]==="id"&&r==="="||t[1]==="className"&&e.config.doc.documentElement.getElementsByClassName&&(r==="~="||r==="="))n.prefilter=t[1],t[3]=s,n[t[1]]=t[1]==="id"?t[3]:s;r in i&&(o=i[r],typeof o=="string"&&(t[3]=s.replace(u._reRegExpTokens,"\\$1"),o=new RegExp(o.replace("{val}",t[3]))),t[2]=o);if(!n.last||n.prefilter!==t[1])return t.slice(1)}},{name:r,re:/^((?:-?[_a-z]+[\w-]*)|\*)/i,fn:function(e,t){var n=e[1];u._isXML||(n=n.toUpperCase()),t.tagName=n;if(n!=="*"&&(!t.last||t.prefilter))return[r,"=",n];t.prefilter||(t.prefilter="tagName")}},{name:s,re:/^\s*([>+~]|\s)\s*/,fn:function(e,t){}},{name:o,re:/^:([\-\w]+)(?:\uE005['"]?([^\uE005]*)['"]?\uE006)*/i,fn:function(e,t){var n=u[o][e[1]];return n?(e[2]&&(e[2]=e[2].replace(/\\/g,"")),[e[2],n]):!1}}],_getToken:function(e){return{tagName:null,id:null,className:null,attributes:{},combinator:null,tests:[]}},_tokenize:function(t){t=t||"",t=u._parseSelector(e.Lang.trim(t));var n=u._getToken(),r=t,i=[],o=!1,a,f,l,c;e:do{o=!1;for(l=0;c=u._parsers[l++];)if(a=c.re.exec(t)){c.name!==s&&(n.selector=t),t=t.replace(a[0],""),t.length||(n.last=!0),u._attrFilters[a[1]]&&(a[1]=u._attrFilters[a[1]]),f=c.fn(a,n);if(f===!1){o=!1;break e}f&&n.tests.push(f);if(!t.length||c.name===s)i.push(n),n=u._getToken(n),c.name===s&&(n.combinator=e.Selector.combinators[a[1]]);o=!0}}while(o&&t.length);if(!o||t.length)i=[];return i},_replaceMarkers:function(e){return e=e.replace(/\[/g,"\ue003"),e=e.replace(/\]/g,"\ue004"),e=e.replace(/\(/g,"\ue005"),e=e.replace(/\)/g,"\ue006"),e},_replaceShorthand:function(t){var n=e.Selector.shorthand,r;for(r in n)n.hasOwnProperty(r)&&(t=t.replace(new RegExp(r,"gi"),n[r]));return t},_parseSelector:function(t){var n=e.Selector._replaceSelector(t),t=n.selector;return t=e.Selector._replaceShorthand(t),t=e.Selector._restore("attr",t,n.attrs),t=e.Selector._restore("pseudo",t,n.pseudos),t=e.Selector._replaceMarkers(t),t=e.Selector._restore("esc",t,n.esc),t},_attrFilters:{"class":"className","for":"htmlFor"},getters:{href:function(t,n){return e.DOM.getAttribute(t,n)},id:function(t,n){return e.DOM.getId(t)}}};e.mix(e.Selector,a,!0),e.Selector.getters.src=e.Selector.getters.rel=e.Selector.getters.href,e.Selector.useNative&&e.config.doc.querySelector&&(e.Selector.shorthand["\\.(-?[_a-z]+[-\\w]*)"]="[class~=$1]")},"@VERSION@",{requires:["selector-native"]});

YUI.add("selector-css3",function(e,t){e.Selector._reNth=/^(?:([\-]?\d*)(n){1}|(odd|even)$)*([\-+]?\d*)$/,e.Selector._getNth=function(t,n,r,i){e.Selector._reNth.test(n);var s=parseInt(RegExp.$1,10),o=RegExp.$2,u=RegExp.$3,a=parseInt(RegExp.$4,10)||0,f=[],l=e.DOM._children(t.parentNode,r),c;u?(s=2,c="+",o="n",a=u==="odd"?1:0):isNaN(s)&&(s=o?1:0);if(s===0)return i&&(a=l.length-a+1),l[a-1]===t?!0:!1;s<0&&(i=!!i,s=Math.abs(s));if(!i){for(var h=a-1,p=l.length;h<p;h+=s)if(h>=0&&l[h]===t)return!0}else for(var h=l.length-a,p=l.length;h>=0;h-=s)if(h<p&&l[h]===t)return!0;return!1},e.mix(e.Selector.pseudos,{root:function(e){return e===e.ownerDocument.documentElement},"nth-child":function(t,n){return e.Selector._getNth(t,n)},"nth-last-child":function(t,n){return e.Selector._getNth(t,n,null,!0)},"nth-of-type":function(t,n){return e.Selector._getNth(t,n,t.tagName)},"nth-last-of-type":function(t,n){return e.Selector._getNth(t,n,t.tagName,!0)},"last-child":function(t){var n=e.DOM._children(t.parentNode);return n[n.length-1]===t},"first-of-type":function(t){return e.DOM._children(t.parentNode,t.tagName)[0]===t},"last-of-type":function(t){var n=e.DOM._children(t.parentNode,t.tagName);return n[n.length-1]===t},"only-child":function(t){var n=e.DOM._children(t.parentNode);return n.length===1&&n[0]===t},"only-of-type":function(t){var n=e.DOM._children(t.parentNode,t.tagName);return n.length===1&&n[0]===t},empty:function(e){return e.childNodes.length===0},not:function(t,n){return!e.Selector.test(t,n)},contains:function(e,t){var n=e.innerText||e.textContent||"";return n.indexOf(t)>-1},checked:function(e){return e.checked===!0||e.selected===!0},enabled:function(e){return e.disabled!==undefined&&!e.disabled},disabled:function(e){return e.disabled}}),e.mix(e.Selector.operators,{"^=":"^{val}","$=":"{val}$","*=":"{val}"}),e.Selector.combinators["~"]={axis:"previousSibling"}},"@VERSION@",{requires:["selector-native","selector-css2"]});

YUI.add("shim-plugin",function(e,t){function n(e){this.init(e)}n.CLASS_NAME="yui-node-shim",n.TEMPLATE='<iframe class="'+n.CLASS_NAME+'" frameborder="0" title="Node Stacking Shim"'+'src="javascript:false" tabindex="-1" role="presentation"'+'style="position:absolute; z-index:-1;"></iframe>',n.prototype={init:function(e){this._host=e.host,this.initEvents(),this.insert(),this.sync()},initEvents:function(){this._resizeHandle=this._host.on("resize",this.sync,this)},getShim:function(){return this._shim||(this._shim=e.Node.create(n.TEMPLATE,this._host.get("ownerDocument")))},insert:function(){var e=this._host;this._shim=e.insertBefore(this.getShim(),e.get("firstChild"))},sync:function(){var e=this._shim,t=this._host;e&&e.setAttrs({width:t.getStyle("width"),height:t.getStyle("height")})},destroy:function(){var e=this._shim;e&&e.remove(!0),this._resizeHandle.detach()}},n.NAME="Shim",n.NS="shim",e.namespace("Plugin"),e.Plugin.Shim=n},"@VERSION@",{requires:["node-style","node-pluginhost"]});

YUI.add("autocomplete-list",function(e,t){var n=e.Lang,r=e.Node,i=e.Array,s=e.UA.ie&&e.UA.ie<7,o=9,u="_CLASS_ITEM",a="_CLASS_ITEM_ACTIVE",f="_CLASS_ITEM_HOVER",l="_SELECTOR_ITEM",c="activeItem",h="alwaysShowList",p="circular",d="hoveredItem",v="id",m="item",g="list",y="result",b="results",w="visible",E="width",S="select",x=e.Base.create("autocompleteList",e.Widget,[e.AutoCompleteBase,e.WidgetPosition,e.WidgetPositionAlign],{ARIA_TEMPLATE:"<div/>",ITEM_TEMPLATE:"<li/>",LIST_TEMPLATE:"<ul/>",UI_EVENTS:function(){var t=e.merge(e.Node.DOM_EVENTS);return delete t.valuechange,delete t.valueChange,t}(),initializer:function(){var t=this.get("inputNode");if(!t){e.error("No inputNode specified.");return}this._inputNode=t,this._listEvents=[],this.DEF_PARENT_NODE=t.get("parentNode"),this[u]=this.getClassName(m),this[a]=this.getClassName(m,"active"),this[f]=this.getClassName(m,"hover"),this[l]="."+this[u],this.publish(S,{defaultFn:this._defSelectFn})},destructor:function(){while(this._listEvents.length)this._listEvents.pop().detach();this._ariaNode&&this._ariaNode.remove().destroy(!0)},bindUI:function(){this._bindInput(),this._bindList()},renderUI:function(){var t=this._createAriaNode(),n=this.get("boundingBox"),r=this.get("contentBox"),i=this._inputNode,o=this._createListNode(),u=i.get("parentNode");i.addClass(this.getClassName("input")).setAttrs({"aria-autocomplete":g,"aria-expanded":!1,"aria-owns":o.get("id")}),u.append(t),s&&n.plug(e.Plugin.Shim),this._ariaNode=t,this._boundingBox=n,this._contentBox=r,this._listNode=o,this._parentNode=u},syncUI:function(){this._syncResults(),this._syncVisibility()},hide:function(){return this.get(h)?this:this.set(w,!1)},selectItem:function(e,t){if(e){if(!e.hasClass(this[u]))return this}else{e=this.get(c);if(!e)return this}return this.fire(S,{itemNode:e,originEvent:t||null,result:e.getData(y)}),this},_activateNextItem:function(){var e=this.get(c),t;return e?t=e.next(this[l])||(this.get(p)?null:e):t=this._getFirstItemNode(),this.set(c,t),this},_activatePrevItem:function(){var e=this.get(c),t=e?e.previous(this[l]):this.get(p)&&this._getLastItemNode();return this.set(c,t||null),this},_add:function(t){var r=[];return i.each(n.isArray(t)?t:[t],function(e){r.push(this._createItemNode(e).setData(y,e))},this),r=e.all(r),this._listNode.append(r.toFrag()),r},_ariaSay:function(e,t){var r=this.get("strings."+e);this._ariaNode.set("text",t?n.sub(r,t):r)},_bindInput:function(){var e=this._inputNode,t,n,r;this.get("align")===null&&(r=this.get("tokenInput"),t=r&&r.get("boundingBox")||e,this.set("align",{node:t,points:["tl","bl"]}),!this.get(E)&&(n=t.get("offsetWidth"))&&this.set(E,n)),this._listEvents=this._listEvents.concat([e.after("blur",this._afterListInputBlur,this),e.after("focus",this._afterListInputFocus,this)])},_bindList:function(){this._listEvents=this._listEvents.concat([e.one("doc").after("click",this._afterDocClick,this),e.one("win").after("windowresize",this._syncPosition,this),this.after({mouseover:this._afterMouseOver,mouseout:this._afterMouseOut,activeItemChange:this._afterActiveItemChange,alwaysShowListChange:this._afterAlwaysShowListChange,hoveredItemChange:this._afterHoveredItemChange,resultsChange:this._afterResultsChange,visibleChange:this._afterVisibleChange}),this._listNode.delegate("click",this._onItemClick,this[l],this)])},_clear:function(){this.set(c,null),this._set(d,null),this._listNode.get("children").remove(!0)},_createAriaNode:function(){var e=r.create(this.ARIA_TEMPLATE);return e.addClass(this.getClassName("aria")).setAttrs({"aria-live":"polite",role:"status"})},_createItemNode:function(t){var n=r.create(this.ITEM_TEMPLATE);return n.addClass(this[u]).setAttrs({id:e.stamp(n),role:"option"}).setAttribute("data-text",t.text).append(t.display)},_createListNode:function(){var t=this.get("listNode")||r.create(this.LIST_TEMPLATE);return t.addClass(this.getClassName(g)).setAttrs({id:e.stamp(t),role:"listbox"}),this._set("listNode",t),this.get("contentBox").append(t),t},_getFirstItemNode:function(){return this._listNode.one(this[l])},_getLastItemNode:function(){return this._listNode.one(this[l]+":last-child")},_syncPosition:function(){this._syncUIPosAlign(),this._syncShim()},_syncResults:function(e){e||(e=this.get(b)),this._clear(),e.length&&(this._add(e),this._ariaSay("items_available")),this._syncPosition(),this.get("activateFirstItem")&&!this.get(c)&&this.set(c,this._getFirstItemNode())},_syncShim:s?function(){var e=this._boundingBox.shim;e&&e.sync()}:function(){},_syncVisibility:function(t){this.get(h)&&(t=!0,this.set(w,t)),typeof t=="undefined"&&(t=this.get(w)),this._inputNode.set("aria-expanded",t),this._boundingBox.set("aria-hidden",!t),t?this._syncPosition():(this.set(c,null),this._set(d,null),this._boundingBox.get("offsetWidth")),e.UA.ie===7&&e.one("body").addClass("yui3-ie7-sucks").removeClass("yui3-ie7-sucks")},_afterActiveItemChange:function(t){var n=this._inputNode,r=t.newVal,i=t.prevVal,s;i&&i._node&&i.removeClass(this[a]),r?(r.addClass(this[a]),n.set("aria-activedescendant",r.get(v))):n.removeAttribute("aria-activedescendant"),this.get("scrollIntoView")&&(s=r||n,(!s.inRegion(e.DOM.viewportRegion(),!0)||!s.inRegion(this._contentBox,!0))&&s.scrollIntoView())},_afterAlwaysShowListChange:function(e){this.set(w,e.newVal||this.get(b).length>0)},_afterDocClick:function(e){var t=this._boundingBox,n=e.target;n!==this._inputNode&&n!==t&&!n.ancestor("#"+t.get("id"),!0)&&this.hide()},_afterHoveredItemChange:function(e){var t=e.newVal,n=e.prevVal;n&&n.removeClass(this[f]),t&&t.addClass(this[f])},_afterListInputBlur:function(){this._listInputFocused=!1,this.get(w)&&!this._mouseOverList&&(this._lastInputKey!==o||!this.get("tabSelect")||!this.get(c))&&this.hide()},_afterListInputFocus:function(){this._listInputFocused=!0},_afterMouseOver:function(e){var t=e.domEvent.target.ancestor(this[l],!0);this._mouseOverList=!0,t&&this._set(d,t)},_afterMouseOut:function(){this._mouseOverList=!1,this._set(d,null)},_afterResultsChange:function(e){this._syncResults(e.newVal
),this.get(h)||this.set(w,!!e.newVal.length)},_afterVisibleChange:function(e){this._syncVisibility(!!e.newVal)},_onItemClick:function(e){var t=e.currentTarget;this.set(c,t),this.selectItem(t,e)},_defSelectFn:function(e){var t=e.result.text;this._inputNode.focus(),this._updateValue(t),this._ariaSay("item_selected",{item:t}),this.hide()}},{ATTRS:{activateFirstItem:{value:!1},activeItem:{setter:e.one,value:null},alwaysShowList:{value:!1},circular:{value:!0},hoveredItem:{readOnly:!0,value:null},listNode:{writeOnce:"initOnly",value:null},scrollIntoView:{value:!1},strings:{valueFn:function(){return e.Intl.get("autocomplete-list")}},tabSelect:{value:!0},visible:{value:!1}},CSS_PREFIX:e.ClassNameManager.getClassName("aclist")});e.AutoCompleteList=x,e.AutoComplete=x},"@VERSION@",{lang:["en","es","hu","it"],requires:["autocomplete-base","event-resize","node-screen","selector-css3","shim-plugin","widget","widget-position","widget-position-align"],skinnable:!0});

YUI.add("autocomplete-list-keys",function(e,t){function u(){e.before(this._bindKeys,this,"bindUI"),this._initKeys()}var n=40,r=13,i=27,s=9,o=38;u.prototype={_initKeys:function(){var e={},t={};e[n]=this._keyDown,t[r]=this._keyEnter,t[i]=this._keyEsc,t[s]=this._keyTab,t[o]=this._keyUp,this._keys=e,this._keysVisible=t},destructor:function(){this._unbindKeys()},_bindKeys:function(){this._keyEvents=this._inputNode.on("keydown",this._onInputKey,this)},_unbindKeys:function(){this._keyEvents&&this._keyEvents.detach(),this._keyEvents=null},_keyDown:function(){this.get("visible")?this._activateNextItem():this.show()},_keyEnter:function(e){var t=this.get("activeItem");if(!t)return!1;this.selectItem(t,e)},_keyEsc:function(){this.hide()},_keyTab:function(e){var t;if(this.get("tabSelect")){t=this.get("activeItem");if(t)return this.selectItem(t,e),!0}return!1},_keyUp:function(){this._activatePrevItem()},_onInputKey:function(e){var t,n=e.keyCode;this._lastInputKey=n,this.get("results").length&&(t=this._keys[n],!t&&this.get("visible")&&(t=this._keysVisible[n]),t&&t.call(this,e)!==!1&&e.preventDefault())}},e.Base.mix(e.AutoCompleteList,[u])},"@VERSION@",{requires:["autocomplete-list","base-build"]});

